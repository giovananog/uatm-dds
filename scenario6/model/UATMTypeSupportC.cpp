// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:372


#include "UATMTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "UATMTypeSupportC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightAuthorizationTypeSupport.

UATM::flightAuthorizationTypeSupport_ptr
TAO::Objref_Traits<UATM::flightAuthorizationTypeSupport>::duplicate (
    UATM::flightAuthorizationTypeSupport_ptr p)
{
  return UATM::flightAuthorizationTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightAuthorizationTypeSupport>::release (
    UATM::flightAuthorizationTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightAuthorizationTypeSupport_ptr
TAO::Objref_Traits<UATM::flightAuthorizationTypeSupport>::nil (void)
{
  return UATM::flightAuthorizationTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightAuthorizationTypeSupport>::marshal (
    const UATM::flightAuthorizationTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightAuthorizationTypeSupport::flightAuthorizationTypeSupport (void)
{}

UATM::flightAuthorizationTypeSupport::~flightAuthorizationTypeSupport (void)
{
}

UATM::flightAuthorizationTypeSupport_ptr
UATM::flightAuthorizationTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationTypeSupport::_duplicate (
      dynamic_cast<flightAuthorizationTypeSupport_ptr> (_tao_objref));
}

UATM::flightAuthorizationTypeSupport_ptr
UATM::flightAuthorizationTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationTypeSupport::_duplicate (
      dynamic_cast<flightAuthorizationTypeSupport_ptr> (_tao_objref));
}

UATM::flightAuthorizationTypeSupport_ptr
UATM::flightAuthorizationTypeSupport::_nil (void)
{
  return 0;
}

UATM::flightAuthorizationTypeSupport_ptr
UATM::flightAuthorizationTypeSupport::_duplicate (flightAuthorizationTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightAuthorizationTypeSupport::_tao_release (flightAuthorizationTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightAuthorizationTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightAuthorizationTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightAuthorizationTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/flightAuthorizationTypeSupport:1.0";
}

::CORBA::Boolean
UATM::flightAuthorizationTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightAuthorizationDataWriter.

UATM::flightAuthorizationDataWriter_ptr
TAO::Objref_Traits<UATM::flightAuthorizationDataWriter>::duplicate (
    UATM::flightAuthorizationDataWriter_ptr p)
{
  return UATM::flightAuthorizationDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightAuthorizationDataWriter>::release (
    UATM::flightAuthorizationDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightAuthorizationDataWriter_ptr
TAO::Objref_Traits<UATM::flightAuthorizationDataWriter>::nil (void)
{
  return UATM::flightAuthorizationDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightAuthorizationDataWriter>::marshal (
    const UATM::flightAuthorizationDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightAuthorizationDataWriter::flightAuthorizationDataWriter (void)
{}

UATM::flightAuthorizationDataWriter::~flightAuthorizationDataWriter (void)
{
}

UATM::flightAuthorizationDataWriter_ptr
UATM::flightAuthorizationDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationDataWriter::_duplicate (
      dynamic_cast<flightAuthorizationDataWriter_ptr> (_tao_objref));
}

UATM::flightAuthorizationDataWriter_ptr
UATM::flightAuthorizationDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationDataWriter::_duplicate (
      dynamic_cast<flightAuthorizationDataWriter_ptr> (_tao_objref));
}

UATM::flightAuthorizationDataWriter_ptr
UATM::flightAuthorizationDataWriter::_nil (void)
{
  return 0;
}

UATM::flightAuthorizationDataWriter_ptr
UATM::flightAuthorizationDataWriter::_duplicate (flightAuthorizationDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightAuthorizationDataWriter::_tao_release (flightAuthorizationDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightAuthorizationDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightAuthorizationDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightAuthorizationDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/flightAuthorizationDataWriter:1.0";
}

::CORBA::Boolean
UATM::flightAuthorizationDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightAuthorizationDataReader.

UATM::flightAuthorizationDataReader_ptr
TAO::Objref_Traits<UATM::flightAuthorizationDataReader>::duplicate (
    UATM::flightAuthorizationDataReader_ptr p)
{
  return UATM::flightAuthorizationDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightAuthorizationDataReader>::release (
    UATM::flightAuthorizationDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightAuthorizationDataReader_ptr
TAO::Objref_Traits<UATM::flightAuthorizationDataReader>::nil (void)
{
  return UATM::flightAuthorizationDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightAuthorizationDataReader>::marshal (
    const UATM::flightAuthorizationDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightAuthorizationDataReader::flightAuthorizationDataReader (void)
{}

UATM::flightAuthorizationDataReader::~flightAuthorizationDataReader (void)
{
}

UATM::flightAuthorizationDataReader_ptr
UATM::flightAuthorizationDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationDataReader::_duplicate (
      dynamic_cast<flightAuthorizationDataReader_ptr> (_tao_objref));
}

UATM::flightAuthorizationDataReader_ptr
UATM::flightAuthorizationDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationDataReader::_duplicate (
      dynamic_cast<flightAuthorizationDataReader_ptr> (_tao_objref));
}

UATM::flightAuthorizationDataReader_ptr
UATM::flightAuthorizationDataReader::_nil (void)
{
  return 0;
}

UATM::flightAuthorizationDataReader_ptr
UATM::flightAuthorizationDataReader::_duplicate (flightAuthorizationDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightAuthorizationDataReader::_tao_release (flightAuthorizationDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightAuthorizationDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightAuthorizationDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightAuthorizationDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/flightAuthorizationDataReader:1.0";
}

::CORBA::Boolean
UATM::flightAuthorizationDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightChangeRecTypeSupport.

UATM::flightChangeRecTypeSupport_ptr
TAO::Objref_Traits<UATM::flightChangeRecTypeSupport>::duplicate (
    UATM::flightChangeRecTypeSupport_ptr p)
{
  return UATM::flightChangeRecTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightChangeRecTypeSupport>::release (
    UATM::flightChangeRecTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightChangeRecTypeSupport_ptr
TAO::Objref_Traits<UATM::flightChangeRecTypeSupport>::nil (void)
{
  return UATM::flightChangeRecTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightChangeRecTypeSupport>::marshal (
    const UATM::flightChangeRecTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightChangeRecTypeSupport::flightChangeRecTypeSupport (void)
{}

UATM::flightChangeRecTypeSupport::~flightChangeRecTypeSupport (void)
{
}

UATM::flightChangeRecTypeSupport_ptr
UATM::flightChangeRecTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightChangeRecTypeSupport::_duplicate (
      dynamic_cast<flightChangeRecTypeSupport_ptr> (_tao_objref));
}

UATM::flightChangeRecTypeSupport_ptr
UATM::flightChangeRecTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightChangeRecTypeSupport::_duplicate (
      dynamic_cast<flightChangeRecTypeSupport_ptr> (_tao_objref));
}

UATM::flightChangeRecTypeSupport_ptr
UATM::flightChangeRecTypeSupport::_nil (void)
{
  return 0;
}

UATM::flightChangeRecTypeSupport_ptr
UATM::flightChangeRecTypeSupport::_duplicate (flightChangeRecTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightChangeRecTypeSupport::_tao_release (flightChangeRecTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightChangeRecTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightChangeRecTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightChangeRecTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/flightChangeRecTypeSupport:1.0";
}

::CORBA::Boolean
UATM::flightChangeRecTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightChangeRecDataWriter.

UATM::flightChangeRecDataWriter_ptr
TAO::Objref_Traits<UATM::flightChangeRecDataWriter>::duplicate (
    UATM::flightChangeRecDataWriter_ptr p)
{
  return UATM::flightChangeRecDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightChangeRecDataWriter>::release (
    UATM::flightChangeRecDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightChangeRecDataWriter_ptr
TAO::Objref_Traits<UATM::flightChangeRecDataWriter>::nil (void)
{
  return UATM::flightChangeRecDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightChangeRecDataWriter>::marshal (
    const UATM::flightChangeRecDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightChangeRecDataWriter::flightChangeRecDataWriter (void)
{}

UATM::flightChangeRecDataWriter::~flightChangeRecDataWriter (void)
{
}

UATM::flightChangeRecDataWriter_ptr
UATM::flightChangeRecDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightChangeRecDataWriter::_duplicate (
      dynamic_cast<flightChangeRecDataWriter_ptr> (_tao_objref));
}

UATM::flightChangeRecDataWriter_ptr
UATM::flightChangeRecDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightChangeRecDataWriter::_duplicate (
      dynamic_cast<flightChangeRecDataWriter_ptr> (_tao_objref));
}

UATM::flightChangeRecDataWriter_ptr
UATM::flightChangeRecDataWriter::_nil (void)
{
  return 0;
}

UATM::flightChangeRecDataWriter_ptr
UATM::flightChangeRecDataWriter::_duplicate (flightChangeRecDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightChangeRecDataWriter::_tao_release (flightChangeRecDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightChangeRecDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightChangeRecDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightChangeRecDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/flightChangeRecDataWriter:1.0";
}

::CORBA::Boolean
UATM::flightChangeRecDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightChangeRecDataReader.

UATM::flightChangeRecDataReader_ptr
TAO::Objref_Traits<UATM::flightChangeRecDataReader>::duplicate (
    UATM::flightChangeRecDataReader_ptr p)
{
  return UATM::flightChangeRecDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightChangeRecDataReader>::release (
    UATM::flightChangeRecDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightChangeRecDataReader_ptr
TAO::Objref_Traits<UATM::flightChangeRecDataReader>::nil (void)
{
  return UATM::flightChangeRecDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightChangeRecDataReader>::marshal (
    const UATM::flightChangeRecDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightChangeRecDataReader::flightChangeRecDataReader (void)
{}

UATM::flightChangeRecDataReader::~flightChangeRecDataReader (void)
{
}

UATM::flightChangeRecDataReader_ptr
UATM::flightChangeRecDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightChangeRecDataReader::_duplicate (
      dynamic_cast<flightChangeRecDataReader_ptr> (_tao_objref));
}

UATM::flightChangeRecDataReader_ptr
UATM::flightChangeRecDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightChangeRecDataReader::_duplicate (
      dynamic_cast<flightChangeRecDataReader_ptr> (_tao_objref));
}

UATM::flightChangeRecDataReader_ptr
UATM::flightChangeRecDataReader::_nil (void)
{
  return 0;
}

UATM::flightChangeRecDataReader_ptr
UATM::flightChangeRecDataReader::_duplicate (flightChangeRecDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightChangeRecDataReader::_tao_release (flightChangeRecDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightChangeRecDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightChangeRecDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightChangeRecDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/flightChangeRecDataReader:1.0";
}

::CORBA::Boolean
UATM::flightChangeRecDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

