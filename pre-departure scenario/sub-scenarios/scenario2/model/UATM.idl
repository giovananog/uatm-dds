#ifndef UATM_IDL
#define UATM_IDL

module UATM {
  struct availabilityInfo;
  struct flightRoutesInfo;
  struct weatherInfo;
  struct flightAssign;
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::availabilityInfo"
#pragma DCPS_DATA_KEY  "UATM::availabilityInfo resource_id"
  struct availabilityInfo {
    string<10> resource_id;
    string<10> resource_type;
    boolean available;
    string<20> skyport_id;
    string<10> availability_time;
  };
};
module UATM {
  typedef string<10> ArrayString[2];
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::flightRoutesInfo"
#pragma DCPS_DATA_KEY  "UATM::flightRoutesInfo route_id"
  struct flightRoutesInfo {
    long route_id;
    string<20> origin_skyport_id;
    string<20> destination_skyport_id;
    boolean available;
    long available_capacity;
    string<20> traffic_density;
  };
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::weatherInfo"
#pragma DCPS_DATA_KEY  "UATM::weatherInfo weather_id"
  struct weatherInfo {
    long weather_id;
    string<20> location;
    float temperature;
    float wind_speed;
    string<20> weather_condition;
    string<10> observation_time;
  };
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::flightAssign"
#pragma DCPS_DATA_KEY  "UATM::flightAssign flight_assign_id"
  struct flightAssign {
    long flight_assign_id;
    string<20> assign_time;
    string<20> flight_id;
    string<20> pilot_id;
    string<20> evtol_id;
  };
};
#endif 
