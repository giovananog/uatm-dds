// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:148

#ifndef _TAO_IDL_UATMTYPESUPPORTC_KAS5GV_H_
#define _TAO_IDL_UATMTYPESUPPORTC_KAS5GV_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "UATM_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "UATMC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"
#include "dds/DdsDynamicDataC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 21
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::availabilityInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> availabilityInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AVAILABILITYINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_AVAILABILITYINFOTYPESUPPORT__VAR_OUT_CH_

  class availabilityInfoTypeSupport;
  typedef availabilityInfoTypeSupport *availabilityInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<availabilityInfoTypeSupport> availabilityInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<availabilityInfoTypeSupport> availabilityInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export availabilityInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef availabilityInfoTypeSupport_ptr _ptr_type;
    typedef availabilityInfoTypeSupport_var _var_type;
    typedef availabilityInfoTypeSupport_out _out_type;

    // The static operations.
    static availabilityInfoTypeSupport_ptr _duplicate (availabilityInfoTypeSupport_ptr obj);

    static void _tao_release (availabilityInfoTypeSupport_ptr obj);

    static availabilityInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static availabilityInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static availabilityInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::availabilityInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::availabilityInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::availabilityInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::availabilityInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::availabilityInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::availabilityInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::availabilityInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::availabilityInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    availabilityInfoTypeSupport (void);

    

    virtual ~availabilityInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport (const availabilityInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport (availabilityInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport &operator= (const availabilityInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport &operator= (availabilityInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AVAILABILITYINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_AVAILABILITYINFODATAWRITER__VAR_OUT_CH_

  class availabilityInfoDataWriter;
  typedef availabilityInfoDataWriter *availabilityInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<availabilityInfoDataWriter> availabilityInfoDataWriter_var;
  typedef TAO_Objref_Out_T<availabilityInfoDataWriter> availabilityInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export availabilityInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef availabilityInfoDataWriter_ptr _ptr_type;
    typedef availabilityInfoDataWriter_var _var_type;
    typedef availabilityInfoDataWriter_out _out_type;

    // The static operations.
    static availabilityInfoDataWriter_ptr _duplicate (availabilityInfoDataWriter_ptr obj);

    static void _tao_release (availabilityInfoDataWriter_ptr obj);

    static availabilityInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::availabilityInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::availabilityInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::availabilityInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::availabilityInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::availabilityInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::availabilityInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    availabilityInfoDataWriter (void);

    

    virtual ~availabilityInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter (const availabilityInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter (availabilityInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter &operator= (const availabilityInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter &operator= (availabilityInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AVAILABILITYINFODATAREADER__VAR_OUT_CH_)
#define _UATM_AVAILABILITYINFODATAREADER__VAR_OUT_CH_

  class availabilityInfoDataReader;
  typedef availabilityInfoDataReader *availabilityInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<availabilityInfoDataReader> availabilityInfoDataReader_var;
  typedef TAO_Objref_Out_T<availabilityInfoDataReader> availabilityInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export availabilityInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef availabilityInfoDataReader_ptr _ptr_type;
    typedef availabilityInfoDataReader_var _var_type;
    typedef availabilityInfoDataReader_out _out_type;

    // The static operations.
    static availabilityInfoDataReader_ptr _duplicate (availabilityInfoDataReader_ptr obj);

    static void _tao_release (availabilityInfoDataReader_ptr obj);

    static availabilityInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::availabilityInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::availabilityInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::availabilityInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::availabilityInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    availabilityInfoDataReader (void);

    

    virtual ~availabilityInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader (const availabilityInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader (availabilityInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader &operator= (const availabilityInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader &operator= (availabilityInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::tolPadRequest, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> tolPadRequestSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TOLPADREQUESTTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_TOLPADREQUESTTYPESUPPORT__VAR_OUT_CH_

  class tolPadRequestTypeSupport;
  typedef tolPadRequestTypeSupport *tolPadRequestTypeSupport_ptr;
  typedef TAO_Objref_Var_T<tolPadRequestTypeSupport> tolPadRequestTypeSupport_var;
  typedef TAO_Objref_Out_T<tolPadRequestTypeSupport> tolPadRequestTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export tolPadRequestTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef tolPadRequestTypeSupport_ptr _ptr_type;
    typedef tolPadRequestTypeSupport_var _var_type;
    typedef tolPadRequestTypeSupport_out _out_type;

    // The static operations.
    static tolPadRequestTypeSupport_ptr _duplicate (tolPadRequestTypeSupport_ptr obj);

    static void _tao_release (tolPadRequestTypeSupport_ptr obj);

    static tolPadRequestTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static tolPadRequestTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static tolPadRequestTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::tolPadRequest & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::tolPadRequest * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::tolPadRequest & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::tolPadRequest & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::tolPadRequest & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::tolPadRequest & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::tolPadRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::tolPadRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    tolPadRequestTypeSupport (void);

    

    virtual ~tolPadRequestTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport (const tolPadRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport (tolPadRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport &operator= (const tolPadRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport &operator= (tolPadRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TOLPADREQUESTDATAWRITER__VAR_OUT_CH_)
#define _UATM_TOLPADREQUESTDATAWRITER__VAR_OUT_CH_

  class tolPadRequestDataWriter;
  typedef tolPadRequestDataWriter *tolPadRequestDataWriter_ptr;
  typedef TAO_Objref_Var_T<tolPadRequestDataWriter> tolPadRequestDataWriter_var;
  typedef TAO_Objref_Out_T<tolPadRequestDataWriter> tolPadRequestDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export tolPadRequestDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef tolPadRequestDataWriter_ptr _ptr_type;
    typedef tolPadRequestDataWriter_var _var_type;
    typedef tolPadRequestDataWriter_out _out_type;

    // The static operations.
    static tolPadRequestDataWriter_ptr _duplicate (tolPadRequestDataWriter_ptr obj);

    static void _tao_release (tolPadRequestDataWriter_ptr obj);

    static tolPadRequestDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::tolPadRequest & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::tolPadRequest & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::tolPadRequest & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::tolPadRequest & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::tolPadRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::tolPadRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    tolPadRequestDataWriter (void);

    

    virtual ~tolPadRequestDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter (const tolPadRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter (tolPadRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter &operator= (const tolPadRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter &operator= (tolPadRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TOLPADREQUESTDATAREADER__VAR_OUT_CH_)
#define _UATM_TOLPADREQUESTDATAREADER__VAR_OUT_CH_

  class tolPadRequestDataReader;
  typedef tolPadRequestDataReader *tolPadRequestDataReader_ptr;
  typedef TAO_Objref_Var_T<tolPadRequestDataReader> tolPadRequestDataReader_var;
  typedef TAO_Objref_Out_T<tolPadRequestDataReader> tolPadRequestDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export tolPadRequestDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef tolPadRequestDataReader_ptr _ptr_type;
    typedef tolPadRequestDataReader_var _var_type;
    typedef tolPadRequestDataReader_out _out_type;

    // The static operations.
    static tolPadRequestDataReader_ptr _duplicate (tolPadRequestDataReader_ptr obj);

    static void _tao_release (tolPadRequestDataReader_ptr obj);

    static tolPadRequestDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::tolPadRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::tolPadRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::tolPadRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::tolPadRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    tolPadRequestDataReader (void);

    

    virtual ~tolPadRequestDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader (const tolPadRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader (tolPadRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader &operator= (const tolPadRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader &operator= (tolPadRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_UATM_AVAILABILITYINFOTYPESUPPORT__TRAITS_)
#define _UATM_AVAILABILITYINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::availabilityInfoTypeSupport>
  {
    static ::UATM::availabilityInfoTypeSupport_ptr duplicate (
        ::UATM::availabilityInfoTypeSupport_ptr p);
    static void release (
        ::UATM::availabilityInfoTypeSupport_ptr p);
    static ::UATM::availabilityInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::availabilityInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AVAILABILITYINFODATAWRITER__TRAITS_)
#define _UATM_AVAILABILITYINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::availabilityInfoDataWriter>
  {
    static ::UATM::availabilityInfoDataWriter_ptr duplicate (
        ::UATM::availabilityInfoDataWriter_ptr p);
    static void release (
        ::UATM::availabilityInfoDataWriter_ptr p);
    static ::UATM::availabilityInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::availabilityInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AVAILABILITYINFODATAREADER__TRAITS_)
#define _UATM_AVAILABILITYINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::availabilityInfoDataReader>
  {
    static ::UATM::availabilityInfoDataReader_ptr duplicate (
        ::UATM::availabilityInfoDataReader_ptr p);
    static void release (
        ::UATM::availabilityInfoDataReader_ptr p);
    static ::UATM::availabilityInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::availabilityInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TOLPADREQUESTTYPESUPPORT__TRAITS_)
#define _UATM_TOLPADREQUESTTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::tolPadRequestTypeSupport>
  {
    static ::UATM::tolPadRequestTypeSupport_ptr duplicate (
        ::UATM::tolPadRequestTypeSupport_ptr p);
    static void release (
        ::UATM::tolPadRequestTypeSupport_ptr p);
    static ::UATM::tolPadRequestTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::tolPadRequestTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TOLPADREQUESTDATAWRITER__TRAITS_)
#define _UATM_TOLPADREQUESTDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::tolPadRequestDataWriter>
  {
    static ::UATM::tolPadRequestDataWriter_ptr duplicate (
        ::UATM::tolPadRequestDataWriter_ptr p);
    static void release (
        ::UATM::tolPadRequestDataWriter_ptr p);
    static ::UATM::tolPadRequestDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::tolPadRequestDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TOLPADREQUESTDATAREADER__TRAITS_)
#define _UATM_TOLPADREQUESTDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::tolPadRequestDataReader>
  {
    static ::UATM::tolPadRequestDataReader_ptr duplicate (
        ::UATM::tolPadRequestDataReader_ptr p);
    static void release (
        ::UATM::tolPadRequestDataReader_ptr p);
    static ::UATM::tolPadRequestDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::tolPadRequestDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:1649

#if defined (__ACE_INLINE__)
#include "UATMTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

