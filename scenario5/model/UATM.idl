#ifndef UATM_IDL
#define UATM_IDL

module UATM {
  struct weatherInfo;
  struct trafficFlowsInfo;
  struct airspaceRestrictions;
  struct acceptableRoute;
};
module UATM {
  typedef string<10> ArrayString[2];
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::weatherInfo"
#pragma DCPS_DATA_KEY  "UATM::weatherInfo weather_id"
  struct weatherInfo {
    long weather_id;
    string<20> location;
    float temperature;
    float wind_speed;
    string<20> weather_condition;
    string<20> observation_time;
  };
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::trafficFlowsInfo"
#pragma DCPS_DATA_KEY  "UATM::trafficFlowsInfo flows_id"
  struct trafficFlowsInfo {
    long flows_id;
    string<10> area;
    string<20> congestion_level;
    string<20> affected_routes;
    string<20> timestamp;
  };
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::airspaceRestrictions"
#pragma DCPS_DATA_KEY  "UATM::airspaceRestrictions restriction_id"
  struct airspaceRestrictions {
    long restriction_id;
    string<20> area;
    string<20> restriction_type;
    string<20> start_time;
    string<20> end_time;
    string<20> authority;
  };
};
module UATM {

#pragma DCPS_DATA_TYPE "UATM::acceptableRoute"
  struct acceptableRoute {
    long route_id;
    string<20> origin;
    string<20> destination;
    string<20> estimated_time;
    string<20> approved_by;
    string<20> timestamp;
  };
};
#endif 
