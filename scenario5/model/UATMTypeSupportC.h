// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:148

#ifndef _TAO_IDL_UATMTYPESUPPORTC_YCX6GW_H_
#define _TAO_IDL_UATMTYPESUPPORTC_YCX6GW_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "UATM_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "UATMC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"
#include "dds/DdsDynamicDataC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 21
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::weatherInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> weatherInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_WEATHERINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_WEATHERINFOTYPESUPPORT__VAR_OUT_CH_

  class weatherInfoTypeSupport;
  typedef weatherInfoTypeSupport *weatherInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<weatherInfoTypeSupport> weatherInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<weatherInfoTypeSupport> weatherInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export weatherInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef weatherInfoTypeSupport_ptr _ptr_type;
    typedef weatherInfoTypeSupport_var _var_type;
    typedef weatherInfoTypeSupport_out _out_type;

    // The static operations.
    static weatherInfoTypeSupport_ptr _duplicate (weatherInfoTypeSupport_ptr obj);

    static void _tao_release (weatherInfoTypeSupport_ptr obj);

    static weatherInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static weatherInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static weatherInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::weatherInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::weatherInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::weatherInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::weatherInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::weatherInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::weatherInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::weatherInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::weatherInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    weatherInfoTypeSupport (void);

    

    virtual ~weatherInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport (const weatherInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport (weatherInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport &operator= (const weatherInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport &operator= (weatherInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_WEATHERINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_WEATHERINFODATAWRITER__VAR_OUT_CH_

  class weatherInfoDataWriter;
  typedef weatherInfoDataWriter *weatherInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<weatherInfoDataWriter> weatherInfoDataWriter_var;
  typedef TAO_Objref_Out_T<weatherInfoDataWriter> weatherInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export weatherInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef weatherInfoDataWriter_ptr _ptr_type;
    typedef weatherInfoDataWriter_var _var_type;
    typedef weatherInfoDataWriter_out _out_type;

    // The static operations.
    static weatherInfoDataWriter_ptr _duplicate (weatherInfoDataWriter_ptr obj);

    static void _tao_release (weatherInfoDataWriter_ptr obj);

    static weatherInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::weatherInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::weatherInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::weatherInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::weatherInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::weatherInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::weatherInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    weatherInfoDataWriter (void);

    

    virtual ~weatherInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter (const weatherInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter (weatherInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter &operator= (const weatherInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter &operator= (weatherInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_WEATHERINFODATAREADER__VAR_OUT_CH_)
#define _UATM_WEATHERINFODATAREADER__VAR_OUT_CH_

  class weatherInfoDataReader;
  typedef weatherInfoDataReader *weatherInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<weatherInfoDataReader> weatherInfoDataReader_var;
  typedef TAO_Objref_Out_T<weatherInfoDataReader> weatherInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export weatherInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef weatherInfoDataReader_ptr _ptr_type;
    typedef weatherInfoDataReader_var _var_type;
    typedef weatherInfoDataReader_out _out_type;

    // The static operations.
    static weatherInfoDataReader_ptr _duplicate (weatherInfoDataReader_ptr obj);

    static void _tao_release (weatherInfoDataReader_ptr obj);

    static weatherInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::weatherInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::weatherInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::weatherInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::weatherInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    weatherInfoDataReader (void);

    

    virtual ~weatherInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader (const weatherInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader (weatherInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader &operator= (const weatherInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader &operator= (weatherInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::trafficFlowsInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> trafficFlowsInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TRAFFICFLOWSINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_TRAFFICFLOWSINFOTYPESUPPORT__VAR_OUT_CH_

  class trafficFlowsInfoTypeSupport;
  typedef trafficFlowsInfoTypeSupport *trafficFlowsInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<trafficFlowsInfoTypeSupport> trafficFlowsInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<trafficFlowsInfoTypeSupport> trafficFlowsInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export trafficFlowsInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef trafficFlowsInfoTypeSupport_ptr _ptr_type;
    typedef trafficFlowsInfoTypeSupport_var _var_type;
    typedef trafficFlowsInfoTypeSupport_out _out_type;

    // The static operations.
    static trafficFlowsInfoTypeSupport_ptr _duplicate (trafficFlowsInfoTypeSupport_ptr obj);

    static void _tao_release (trafficFlowsInfoTypeSupport_ptr obj);

    static trafficFlowsInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::trafficFlowsInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::trafficFlowsInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::trafficFlowsInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::trafficFlowsInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::trafficFlowsInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::trafficFlowsInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::trafficFlowsInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::trafficFlowsInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    trafficFlowsInfoTypeSupport (void);

    

    virtual ~trafficFlowsInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport (const trafficFlowsInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport (trafficFlowsInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport &operator= (const trafficFlowsInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport &operator= (trafficFlowsInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TRAFFICFLOWSINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_TRAFFICFLOWSINFODATAWRITER__VAR_OUT_CH_

  class trafficFlowsInfoDataWriter;
  typedef trafficFlowsInfoDataWriter *trafficFlowsInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<trafficFlowsInfoDataWriter> trafficFlowsInfoDataWriter_var;
  typedef TAO_Objref_Out_T<trafficFlowsInfoDataWriter> trafficFlowsInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export trafficFlowsInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef trafficFlowsInfoDataWriter_ptr _ptr_type;
    typedef trafficFlowsInfoDataWriter_var _var_type;
    typedef trafficFlowsInfoDataWriter_out _out_type;

    // The static operations.
    static trafficFlowsInfoDataWriter_ptr _duplicate (trafficFlowsInfoDataWriter_ptr obj);

    static void _tao_release (trafficFlowsInfoDataWriter_ptr obj);

    static trafficFlowsInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::trafficFlowsInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::trafficFlowsInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::trafficFlowsInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::trafficFlowsInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    trafficFlowsInfoDataWriter (void);

    

    virtual ~trafficFlowsInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter (const trafficFlowsInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter (trafficFlowsInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter &operator= (const trafficFlowsInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter &operator= (trafficFlowsInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TRAFFICFLOWSINFODATAREADER__VAR_OUT_CH_)
#define _UATM_TRAFFICFLOWSINFODATAREADER__VAR_OUT_CH_

  class trafficFlowsInfoDataReader;
  typedef trafficFlowsInfoDataReader *trafficFlowsInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<trafficFlowsInfoDataReader> trafficFlowsInfoDataReader_var;
  typedef TAO_Objref_Out_T<trafficFlowsInfoDataReader> trafficFlowsInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export trafficFlowsInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef trafficFlowsInfoDataReader_ptr _ptr_type;
    typedef trafficFlowsInfoDataReader_var _var_type;
    typedef trafficFlowsInfoDataReader_out _out_type;

    // The static operations.
    static trafficFlowsInfoDataReader_ptr _duplicate (trafficFlowsInfoDataReader_ptr obj);

    static void _tao_release (trafficFlowsInfoDataReader_ptr obj);

    static trafficFlowsInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::trafficFlowsInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::trafficFlowsInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::trafficFlowsInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::trafficFlowsInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    trafficFlowsInfoDataReader (void);

    

    virtual ~trafficFlowsInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader (const trafficFlowsInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader (trafficFlowsInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader &operator= (const trafficFlowsInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader &operator= (trafficFlowsInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::airspaceRestrictions, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> airspaceRestrictionsSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AIRSPACERESTRICTIONSTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_AIRSPACERESTRICTIONSTYPESUPPORT__VAR_OUT_CH_

  class airspaceRestrictionsTypeSupport;
  typedef airspaceRestrictionsTypeSupport *airspaceRestrictionsTypeSupport_ptr;
  typedef TAO_Objref_Var_T<airspaceRestrictionsTypeSupport> airspaceRestrictionsTypeSupport_var;
  typedef TAO_Objref_Out_T<airspaceRestrictionsTypeSupport> airspaceRestrictionsTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export airspaceRestrictionsTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef airspaceRestrictionsTypeSupport_ptr _ptr_type;
    typedef airspaceRestrictionsTypeSupport_var _var_type;
    typedef airspaceRestrictionsTypeSupport_out _out_type;

    // The static operations.
    static airspaceRestrictionsTypeSupport_ptr _duplicate (airspaceRestrictionsTypeSupport_ptr obj);

    static void _tao_release (airspaceRestrictionsTypeSupport_ptr obj);

    static airspaceRestrictionsTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::airspaceRestrictions & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::airspaceRestrictions * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::airspaceRestrictions & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::airspaceRestrictions & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::airspaceRestrictions & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::airspaceRestrictions & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::airspaceRestrictions_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::airspaceRestrictions_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    airspaceRestrictionsTypeSupport (void);

    

    virtual ~airspaceRestrictionsTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport (const airspaceRestrictionsTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport (airspaceRestrictionsTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport &operator= (const airspaceRestrictionsTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport &operator= (airspaceRestrictionsTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAWRITER__VAR_OUT_CH_)
#define _UATM_AIRSPACERESTRICTIONSDATAWRITER__VAR_OUT_CH_

  class airspaceRestrictionsDataWriter;
  typedef airspaceRestrictionsDataWriter *airspaceRestrictionsDataWriter_ptr;
  typedef TAO_Objref_Var_T<airspaceRestrictionsDataWriter> airspaceRestrictionsDataWriter_var;
  typedef TAO_Objref_Out_T<airspaceRestrictionsDataWriter> airspaceRestrictionsDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export airspaceRestrictionsDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef airspaceRestrictionsDataWriter_ptr _ptr_type;
    typedef airspaceRestrictionsDataWriter_var _var_type;
    typedef airspaceRestrictionsDataWriter_out _out_type;

    // The static operations.
    static airspaceRestrictionsDataWriter_ptr _duplicate (airspaceRestrictionsDataWriter_ptr obj);

    static void _tao_release (airspaceRestrictionsDataWriter_ptr obj);

    static airspaceRestrictionsDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::airspaceRestrictions & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::airspaceRestrictions & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::airspaceRestrictions & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::airspaceRestrictions & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::airspaceRestrictions & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::airspaceRestrictions & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    airspaceRestrictionsDataWriter (void);

    

    virtual ~airspaceRestrictionsDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter (const airspaceRestrictionsDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter (airspaceRestrictionsDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter &operator= (const airspaceRestrictionsDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter &operator= (airspaceRestrictionsDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAREADER__VAR_OUT_CH_)
#define _UATM_AIRSPACERESTRICTIONSDATAREADER__VAR_OUT_CH_

  class airspaceRestrictionsDataReader;
  typedef airspaceRestrictionsDataReader *airspaceRestrictionsDataReader_ptr;
  typedef TAO_Objref_Var_T<airspaceRestrictionsDataReader> airspaceRestrictionsDataReader_var;
  typedef TAO_Objref_Out_T<airspaceRestrictionsDataReader> airspaceRestrictionsDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export airspaceRestrictionsDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef airspaceRestrictionsDataReader_ptr _ptr_type;
    typedef airspaceRestrictionsDataReader_var _var_type;
    typedef airspaceRestrictionsDataReader_out _out_type;

    // The static operations.
    static airspaceRestrictionsDataReader_ptr _duplicate (airspaceRestrictionsDataReader_ptr obj);

    static void _tao_release (airspaceRestrictionsDataReader_ptr obj);

    static airspaceRestrictionsDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::airspaceRestrictions & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::airspaceRestrictions & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::airspaceRestrictions & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::airspaceRestrictions & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    airspaceRestrictionsDataReader (void);

    

    virtual ~airspaceRestrictionsDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader (const airspaceRestrictionsDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader (airspaceRestrictionsDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader &operator= (const airspaceRestrictionsDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader &operator= (airspaceRestrictionsDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::acceptableRoute, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> acceptableRouteSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_ACCEPTABLEROUTETYPESUPPORT__VAR_OUT_CH_)
#define _UATM_ACCEPTABLEROUTETYPESUPPORT__VAR_OUT_CH_

  class acceptableRouteTypeSupport;
  typedef acceptableRouteTypeSupport *acceptableRouteTypeSupport_ptr;
  typedef TAO_Objref_Var_T<acceptableRouteTypeSupport> acceptableRouteTypeSupport_var;
  typedef TAO_Objref_Out_T<acceptableRouteTypeSupport> acceptableRouteTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export acceptableRouteTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef acceptableRouteTypeSupport_ptr _ptr_type;
    typedef acceptableRouteTypeSupport_var _var_type;
    typedef acceptableRouteTypeSupport_out _out_type;

    // The static operations.
    static acceptableRouteTypeSupport_ptr _duplicate (acceptableRouteTypeSupport_ptr obj);

    static void _tao_release (acceptableRouteTypeSupport_ptr obj);

    static acceptableRouteTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static acceptableRouteTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static acceptableRouteTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::acceptableRoute & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::acceptableRoute * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::acceptableRoute & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::acceptableRoute & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::acceptableRoute & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::acceptableRoute & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::acceptableRoute_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::acceptableRoute_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    acceptableRouteTypeSupport (void);

    

    virtual ~acceptableRouteTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport (const acceptableRouteTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport (acceptableRouteTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport &operator= (const acceptableRouteTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport &operator= (acceptableRouteTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_ACCEPTABLEROUTEDATAWRITER__VAR_OUT_CH_)
#define _UATM_ACCEPTABLEROUTEDATAWRITER__VAR_OUT_CH_

  class acceptableRouteDataWriter;
  typedef acceptableRouteDataWriter *acceptableRouteDataWriter_ptr;
  typedef TAO_Objref_Var_T<acceptableRouteDataWriter> acceptableRouteDataWriter_var;
  typedef TAO_Objref_Out_T<acceptableRouteDataWriter> acceptableRouteDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export acceptableRouteDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef acceptableRouteDataWriter_ptr _ptr_type;
    typedef acceptableRouteDataWriter_var _var_type;
    typedef acceptableRouteDataWriter_out _out_type;

    // The static operations.
    static acceptableRouteDataWriter_ptr _duplicate (acceptableRouteDataWriter_ptr obj);

    static void _tao_release (acceptableRouteDataWriter_ptr obj);

    static acceptableRouteDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::acceptableRoute & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::acceptableRoute & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::acceptableRoute & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::acceptableRoute & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::acceptableRoute & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::acceptableRoute & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    acceptableRouteDataWriter (void);

    

    virtual ~acceptableRouteDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter (const acceptableRouteDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter (acceptableRouteDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter &operator= (const acceptableRouteDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter &operator= (acceptableRouteDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_ACCEPTABLEROUTEDATAREADER__VAR_OUT_CH_)
#define _UATM_ACCEPTABLEROUTEDATAREADER__VAR_OUT_CH_

  class acceptableRouteDataReader;
  typedef acceptableRouteDataReader *acceptableRouteDataReader_ptr;
  typedef TAO_Objref_Var_T<acceptableRouteDataReader> acceptableRouteDataReader_var;
  typedef TAO_Objref_Out_T<acceptableRouteDataReader> acceptableRouteDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export acceptableRouteDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef acceptableRouteDataReader_ptr _ptr_type;
    typedef acceptableRouteDataReader_var _var_type;
    typedef acceptableRouteDataReader_out _out_type;

    // The static operations.
    static acceptableRouteDataReader_ptr _duplicate (acceptableRouteDataReader_ptr obj);

    static void _tao_release (acceptableRouteDataReader_ptr obj);

    static acceptableRouteDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::acceptableRoute & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::acceptableRoute & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::acceptableRoute & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::acceptableRoute & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    acceptableRouteDataReader (void);

    

    virtual ~acceptableRouteDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader (const acceptableRouteDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader (acceptableRouteDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader &operator= (const acceptableRouteDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader &operator= (acceptableRouteDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_UATM_WEATHERINFOTYPESUPPORT__TRAITS_)
#define _UATM_WEATHERINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::weatherInfoTypeSupport>
  {
    static ::UATM::weatherInfoTypeSupport_ptr duplicate (
        ::UATM::weatherInfoTypeSupport_ptr p);
    static void release (
        ::UATM::weatherInfoTypeSupport_ptr p);
    static ::UATM::weatherInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::weatherInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_WEATHERINFODATAWRITER__TRAITS_)
#define _UATM_WEATHERINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::weatherInfoDataWriter>
  {
    static ::UATM::weatherInfoDataWriter_ptr duplicate (
        ::UATM::weatherInfoDataWriter_ptr p);
    static void release (
        ::UATM::weatherInfoDataWriter_ptr p);
    static ::UATM::weatherInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::weatherInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_WEATHERINFODATAREADER__TRAITS_)
#define _UATM_WEATHERINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::weatherInfoDataReader>
  {
    static ::UATM::weatherInfoDataReader_ptr duplicate (
        ::UATM::weatherInfoDataReader_ptr p);
    static void release (
        ::UATM::weatherInfoDataReader_ptr p);
    static ::UATM::weatherInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::weatherInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TRAFFICFLOWSINFOTYPESUPPORT__TRAITS_)
#define _UATM_TRAFFICFLOWSINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::trafficFlowsInfoTypeSupport>
  {
    static ::UATM::trafficFlowsInfoTypeSupport_ptr duplicate (
        ::UATM::trafficFlowsInfoTypeSupport_ptr p);
    static void release (
        ::UATM::trafficFlowsInfoTypeSupport_ptr p);
    static ::UATM::trafficFlowsInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::trafficFlowsInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TRAFFICFLOWSINFODATAWRITER__TRAITS_)
#define _UATM_TRAFFICFLOWSINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::trafficFlowsInfoDataWriter>
  {
    static ::UATM::trafficFlowsInfoDataWriter_ptr duplicate (
        ::UATM::trafficFlowsInfoDataWriter_ptr p);
    static void release (
        ::UATM::trafficFlowsInfoDataWriter_ptr p);
    static ::UATM::trafficFlowsInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::trafficFlowsInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TRAFFICFLOWSINFODATAREADER__TRAITS_)
#define _UATM_TRAFFICFLOWSINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::trafficFlowsInfoDataReader>
  {
    static ::UATM::trafficFlowsInfoDataReader_ptr duplicate (
        ::UATM::trafficFlowsInfoDataReader_ptr p);
    static void release (
        ::UATM::trafficFlowsInfoDataReader_ptr p);
    static ::UATM::trafficFlowsInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::trafficFlowsInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AIRSPACERESTRICTIONSTYPESUPPORT__TRAITS_)
#define _UATM_AIRSPACERESTRICTIONSTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::airspaceRestrictionsTypeSupport>
  {
    static ::UATM::airspaceRestrictionsTypeSupport_ptr duplicate (
        ::UATM::airspaceRestrictionsTypeSupport_ptr p);
    static void release (
        ::UATM::airspaceRestrictionsTypeSupport_ptr p);
    static ::UATM::airspaceRestrictionsTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::airspaceRestrictionsTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAWRITER__TRAITS_)
#define _UATM_AIRSPACERESTRICTIONSDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::airspaceRestrictionsDataWriter>
  {
    static ::UATM::airspaceRestrictionsDataWriter_ptr duplicate (
        ::UATM::airspaceRestrictionsDataWriter_ptr p);
    static void release (
        ::UATM::airspaceRestrictionsDataWriter_ptr p);
    static ::UATM::airspaceRestrictionsDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::airspaceRestrictionsDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAREADER__TRAITS_)
#define _UATM_AIRSPACERESTRICTIONSDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::airspaceRestrictionsDataReader>
  {
    static ::UATM::airspaceRestrictionsDataReader_ptr duplicate (
        ::UATM::airspaceRestrictionsDataReader_ptr p);
    static void release (
        ::UATM::airspaceRestrictionsDataReader_ptr p);
    static ::UATM::airspaceRestrictionsDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::airspaceRestrictionsDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_ACCEPTABLEROUTETYPESUPPORT__TRAITS_)
#define _UATM_ACCEPTABLEROUTETYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::acceptableRouteTypeSupport>
  {
    static ::UATM::acceptableRouteTypeSupport_ptr duplicate (
        ::UATM::acceptableRouteTypeSupport_ptr p);
    static void release (
        ::UATM::acceptableRouteTypeSupport_ptr p);
    static ::UATM::acceptableRouteTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::acceptableRouteTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_ACCEPTABLEROUTEDATAWRITER__TRAITS_)
#define _UATM_ACCEPTABLEROUTEDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::acceptableRouteDataWriter>
  {
    static ::UATM::acceptableRouteDataWriter_ptr duplicate (
        ::UATM::acceptableRouteDataWriter_ptr p);
    static void release (
        ::UATM::acceptableRouteDataWriter_ptr p);
    static ::UATM::acceptableRouteDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::acceptableRouteDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_ACCEPTABLEROUTEDATAREADER__TRAITS_)
#define _UATM_ACCEPTABLEROUTEDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::acceptableRouteDataReader>
  {
    static ::UATM::acceptableRouteDataReader_ptr duplicate (
        ::UATM::acceptableRouteDataReader_ptr p);
    static void release (
        ::UATM::acceptableRouteDataReader_ptr p);
    static ::UATM::acceptableRouteDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::acceptableRouteDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:1649

#if defined (__ACE_INLINE__)
#include "UATMTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

