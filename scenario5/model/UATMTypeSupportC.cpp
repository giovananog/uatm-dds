// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:372


#include "UATMTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "UATMTypeSupportC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::weatherInfoTypeSupport.

UATM::weatherInfoTypeSupport_ptr
TAO::Objref_Traits<UATM::weatherInfoTypeSupport>::duplicate (
    UATM::weatherInfoTypeSupport_ptr p)
{
  return UATM::weatherInfoTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::weatherInfoTypeSupport>::release (
    UATM::weatherInfoTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::weatherInfoTypeSupport_ptr
TAO::Objref_Traits<UATM::weatherInfoTypeSupport>::nil (void)
{
  return UATM::weatherInfoTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::weatherInfoTypeSupport>::marshal (
    const UATM::weatherInfoTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::weatherInfoTypeSupport::weatherInfoTypeSupport (void)
{}

UATM::weatherInfoTypeSupport::~weatherInfoTypeSupport (void)
{
}

UATM::weatherInfoTypeSupport_ptr
UATM::weatherInfoTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return weatherInfoTypeSupport::_duplicate (
      dynamic_cast<weatherInfoTypeSupport_ptr> (_tao_objref));
}

UATM::weatherInfoTypeSupport_ptr
UATM::weatherInfoTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return weatherInfoTypeSupport::_duplicate (
      dynamic_cast<weatherInfoTypeSupport_ptr> (_tao_objref));
}

UATM::weatherInfoTypeSupport_ptr
UATM::weatherInfoTypeSupport::_nil (void)
{
  return 0;
}

UATM::weatherInfoTypeSupport_ptr
UATM::weatherInfoTypeSupport::_duplicate (weatherInfoTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::weatherInfoTypeSupport::_tao_release (weatherInfoTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::weatherInfoTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/weatherInfoTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::weatherInfoTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/weatherInfoTypeSupport:1.0";
}

::CORBA::Boolean
UATM::weatherInfoTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::weatherInfoDataWriter.

UATM::weatherInfoDataWriter_ptr
TAO::Objref_Traits<UATM::weatherInfoDataWriter>::duplicate (
    UATM::weatherInfoDataWriter_ptr p)
{
  return UATM::weatherInfoDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::weatherInfoDataWriter>::release (
    UATM::weatherInfoDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::weatherInfoDataWriter_ptr
TAO::Objref_Traits<UATM::weatherInfoDataWriter>::nil (void)
{
  return UATM::weatherInfoDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::weatherInfoDataWriter>::marshal (
    const UATM::weatherInfoDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::weatherInfoDataWriter::weatherInfoDataWriter (void)
{}

UATM::weatherInfoDataWriter::~weatherInfoDataWriter (void)
{
}

UATM::weatherInfoDataWriter_ptr
UATM::weatherInfoDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return weatherInfoDataWriter::_duplicate (
      dynamic_cast<weatherInfoDataWriter_ptr> (_tao_objref));
}

UATM::weatherInfoDataWriter_ptr
UATM::weatherInfoDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return weatherInfoDataWriter::_duplicate (
      dynamic_cast<weatherInfoDataWriter_ptr> (_tao_objref));
}

UATM::weatherInfoDataWriter_ptr
UATM::weatherInfoDataWriter::_nil (void)
{
  return 0;
}

UATM::weatherInfoDataWriter_ptr
UATM::weatherInfoDataWriter::_duplicate (weatherInfoDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::weatherInfoDataWriter::_tao_release (weatherInfoDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::weatherInfoDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/weatherInfoDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::weatherInfoDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/weatherInfoDataWriter:1.0";
}

::CORBA::Boolean
UATM::weatherInfoDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::weatherInfoDataReader.

UATM::weatherInfoDataReader_ptr
TAO::Objref_Traits<UATM::weatherInfoDataReader>::duplicate (
    UATM::weatherInfoDataReader_ptr p)
{
  return UATM::weatherInfoDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::weatherInfoDataReader>::release (
    UATM::weatherInfoDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::weatherInfoDataReader_ptr
TAO::Objref_Traits<UATM::weatherInfoDataReader>::nil (void)
{
  return UATM::weatherInfoDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::weatherInfoDataReader>::marshal (
    const UATM::weatherInfoDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::weatherInfoDataReader::weatherInfoDataReader (void)
{}

UATM::weatherInfoDataReader::~weatherInfoDataReader (void)
{
}

UATM::weatherInfoDataReader_ptr
UATM::weatherInfoDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return weatherInfoDataReader::_duplicate (
      dynamic_cast<weatherInfoDataReader_ptr> (_tao_objref));
}

UATM::weatherInfoDataReader_ptr
UATM::weatherInfoDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return weatherInfoDataReader::_duplicate (
      dynamic_cast<weatherInfoDataReader_ptr> (_tao_objref));
}

UATM::weatherInfoDataReader_ptr
UATM::weatherInfoDataReader::_nil (void)
{
  return 0;
}

UATM::weatherInfoDataReader_ptr
UATM::weatherInfoDataReader::_duplicate (weatherInfoDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::weatherInfoDataReader::_tao_release (weatherInfoDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::weatherInfoDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/weatherInfoDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::weatherInfoDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/weatherInfoDataReader:1.0";
}

::CORBA::Boolean
UATM::weatherInfoDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::trafficFlowsInfoTypeSupport.

UATM::trafficFlowsInfoTypeSupport_ptr
TAO::Objref_Traits<UATM::trafficFlowsInfoTypeSupport>::duplicate (
    UATM::trafficFlowsInfoTypeSupport_ptr p)
{
  return UATM::trafficFlowsInfoTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::trafficFlowsInfoTypeSupport>::release (
    UATM::trafficFlowsInfoTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::trafficFlowsInfoTypeSupport_ptr
TAO::Objref_Traits<UATM::trafficFlowsInfoTypeSupport>::nil (void)
{
  return UATM::trafficFlowsInfoTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::trafficFlowsInfoTypeSupport>::marshal (
    const UATM::trafficFlowsInfoTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::trafficFlowsInfoTypeSupport::trafficFlowsInfoTypeSupport (void)
{}

UATM::trafficFlowsInfoTypeSupport::~trafficFlowsInfoTypeSupport (void)
{
}

UATM::trafficFlowsInfoTypeSupport_ptr
UATM::trafficFlowsInfoTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return trafficFlowsInfoTypeSupport::_duplicate (
      dynamic_cast<trafficFlowsInfoTypeSupport_ptr> (_tao_objref));
}

UATM::trafficFlowsInfoTypeSupport_ptr
UATM::trafficFlowsInfoTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return trafficFlowsInfoTypeSupport::_duplicate (
      dynamic_cast<trafficFlowsInfoTypeSupport_ptr> (_tao_objref));
}

UATM::trafficFlowsInfoTypeSupport_ptr
UATM::trafficFlowsInfoTypeSupport::_nil (void)
{
  return 0;
}

UATM::trafficFlowsInfoTypeSupport_ptr
UATM::trafficFlowsInfoTypeSupport::_duplicate (trafficFlowsInfoTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::trafficFlowsInfoTypeSupport::_tao_release (trafficFlowsInfoTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::trafficFlowsInfoTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/trafficFlowsInfoTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::trafficFlowsInfoTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/trafficFlowsInfoTypeSupport:1.0";
}

::CORBA::Boolean
UATM::trafficFlowsInfoTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::trafficFlowsInfoDataWriter.

UATM::trafficFlowsInfoDataWriter_ptr
TAO::Objref_Traits<UATM::trafficFlowsInfoDataWriter>::duplicate (
    UATM::trafficFlowsInfoDataWriter_ptr p)
{
  return UATM::trafficFlowsInfoDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::trafficFlowsInfoDataWriter>::release (
    UATM::trafficFlowsInfoDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::trafficFlowsInfoDataWriter_ptr
TAO::Objref_Traits<UATM::trafficFlowsInfoDataWriter>::nil (void)
{
  return UATM::trafficFlowsInfoDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::trafficFlowsInfoDataWriter>::marshal (
    const UATM::trafficFlowsInfoDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::trafficFlowsInfoDataWriter::trafficFlowsInfoDataWriter (void)
{}

UATM::trafficFlowsInfoDataWriter::~trafficFlowsInfoDataWriter (void)
{
}

UATM::trafficFlowsInfoDataWriter_ptr
UATM::trafficFlowsInfoDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return trafficFlowsInfoDataWriter::_duplicate (
      dynamic_cast<trafficFlowsInfoDataWriter_ptr> (_tao_objref));
}

UATM::trafficFlowsInfoDataWriter_ptr
UATM::trafficFlowsInfoDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return trafficFlowsInfoDataWriter::_duplicate (
      dynamic_cast<trafficFlowsInfoDataWriter_ptr> (_tao_objref));
}

UATM::trafficFlowsInfoDataWriter_ptr
UATM::trafficFlowsInfoDataWriter::_nil (void)
{
  return 0;
}

UATM::trafficFlowsInfoDataWriter_ptr
UATM::trafficFlowsInfoDataWriter::_duplicate (trafficFlowsInfoDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::trafficFlowsInfoDataWriter::_tao_release (trafficFlowsInfoDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::trafficFlowsInfoDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/trafficFlowsInfoDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::trafficFlowsInfoDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/trafficFlowsInfoDataWriter:1.0";
}

::CORBA::Boolean
UATM::trafficFlowsInfoDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::trafficFlowsInfoDataReader.

UATM::trafficFlowsInfoDataReader_ptr
TAO::Objref_Traits<UATM::trafficFlowsInfoDataReader>::duplicate (
    UATM::trafficFlowsInfoDataReader_ptr p)
{
  return UATM::trafficFlowsInfoDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::trafficFlowsInfoDataReader>::release (
    UATM::trafficFlowsInfoDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::trafficFlowsInfoDataReader_ptr
TAO::Objref_Traits<UATM::trafficFlowsInfoDataReader>::nil (void)
{
  return UATM::trafficFlowsInfoDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::trafficFlowsInfoDataReader>::marshal (
    const UATM::trafficFlowsInfoDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::trafficFlowsInfoDataReader::trafficFlowsInfoDataReader (void)
{}

UATM::trafficFlowsInfoDataReader::~trafficFlowsInfoDataReader (void)
{
}

UATM::trafficFlowsInfoDataReader_ptr
UATM::trafficFlowsInfoDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return trafficFlowsInfoDataReader::_duplicate (
      dynamic_cast<trafficFlowsInfoDataReader_ptr> (_tao_objref));
}

UATM::trafficFlowsInfoDataReader_ptr
UATM::trafficFlowsInfoDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return trafficFlowsInfoDataReader::_duplicate (
      dynamic_cast<trafficFlowsInfoDataReader_ptr> (_tao_objref));
}

UATM::trafficFlowsInfoDataReader_ptr
UATM::trafficFlowsInfoDataReader::_nil (void)
{
  return 0;
}

UATM::trafficFlowsInfoDataReader_ptr
UATM::trafficFlowsInfoDataReader::_duplicate (trafficFlowsInfoDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::trafficFlowsInfoDataReader::_tao_release (trafficFlowsInfoDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::trafficFlowsInfoDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/trafficFlowsInfoDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::trafficFlowsInfoDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/trafficFlowsInfoDataReader:1.0";
}

::CORBA::Boolean
UATM::trafficFlowsInfoDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::asirspaceRestrictionsTypeSupport.

UATM::asirspaceRestrictionsTypeSupport_ptr
TAO::Objref_Traits<UATM::asirspaceRestrictionsTypeSupport>::duplicate (
    UATM::asirspaceRestrictionsTypeSupport_ptr p)
{
  return UATM::asirspaceRestrictionsTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::asirspaceRestrictionsTypeSupport>::release (
    UATM::asirspaceRestrictionsTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::asirspaceRestrictionsTypeSupport_ptr
TAO::Objref_Traits<UATM::asirspaceRestrictionsTypeSupport>::nil (void)
{
  return UATM::asirspaceRestrictionsTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::asirspaceRestrictionsTypeSupport>::marshal (
    const UATM::asirspaceRestrictionsTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::asirspaceRestrictionsTypeSupport::asirspaceRestrictionsTypeSupport (void)
{}

UATM::asirspaceRestrictionsTypeSupport::~asirspaceRestrictionsTypeSupport (void)
{
}

UATM::asirspaceRestrictionsTypeSupport_ptr
UATM::asirspaceRestrictionsTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return asirspaceRestrictionsTypeSupport::_duplicate (
      dynamic_cast<asirspaceRestrictionsTypeSupport_ptr> (_tao_objref));
}

UATM::asirspaceRestrictionsTypeSupport_ptr
UATM::asirspaceRestrictionsTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return asirspaceRestrictionsTypeSupport::_duplicate (
      dynamic_cast<asirspaceRestrictionsTypeSupport_ptr> (_tao_objref));
}

UATM::asirspaceRestrictionsTypeSupport_ptr
UATM::asirspaceRestrictionsTypeSupport::_nil (void)
{
  return 0;
}

UATM::asirspaceRestrictionsTypeSupport_ptr
UATM::asirspaceRestrictionsTypeSupport::_duplicate (asirspaceRestrictionsTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::asirspaceRestrictionsTypeSupport::_tao_release (asirspaceRestrictionsTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::asirspaceRestrictionsTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/asirspaceRestrictionsTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::asirspaceRestrictionsTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/asirspaceRestrictionsTypeSupport:1.0";
}

::CORBA::Boolean
UATM::asirspaceRestrictionsTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::asirspaceRestrictionsDataWriter.

UATM::asirspaceRestrictionsDataWriter_ptr
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataWriter>::duplicate (
    UATM::asirspaceRestrictionsDataWriter_ptr p)
{
  return UATM::asirspaceRestrictionsDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataWriter>::release (
    UATM::asirspaceRestrictionsDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::asirspaceRestrictionsDataWriter_ptr
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataWriter>::nil (void)
{
  return UATM::asirspaceRestrictionsDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataWriter>::marshal (
    const UATM::asirspaceRestrictionsDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::asirspaceRestrictionsDataWriter::asirspaceRestrictionsDataWriter (void)
{}

UATM::asirspaceRestrictionsDataWriter::~asirspaceRestrictionsDataWriter (void)
{
}

UATM::asirspaceRestrictionsDataWriter_ptr
UATM::asirspaceRestrictionsDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return asirspaceRestrictionsDataWriter::_duplicate (
      dynamic_cast<asirspaceRestrictionsDataWriter_ptr> (_tao_objref));
}

UATM::asirspaceRestrictionsDataWriter_ptr
UATM::asirspaceRestrictionsDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return asirspaceRestrictionsDataWriter::_duplicate (
      dynamic_cast<asirspaceRestrictionsDataWriter_ptr> (_tao_objref));
}

UATM::asirspaceRestrictionsDataWriter_ptr
UATM::asirspaceRestrictionsDataWriter::_nil (void)
{
  return 0;
}

UATM::asirspaceRestrictionsDataWriter_ptr
UATM::asirspaceRestrictionsDataWriter::_duplicate (asirspaceRestrictionsDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::asirspaceRestrictionsDataWriter::_tao_release (asirspaceRestrictionsDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::asirspaceRestrictionsDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/asirspaceRestrictionsDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::asirspaceRestrictionsDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/asirspaceRestrictionsDataWriter:1.0";
}

::CORBA::Boolean
UATM::asirspaceRestrictionsDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::asirspaceRestrictionsDataReader.

UATM::asirspaceRestrictionsDataReader_ptr
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataReader>::duplicate (
    UATM::asirspaceRestrictionsDataReader_ptr p)
{
  return UATM::asirspaceRestrictionsDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataReader>::release (
    UATM::asirspaceRestrictionsDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::asirspaceRestrictionsDataReader_ptr
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataReader>::nil (void)
{
  return UATM::asirspaceRestrictionsDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::asirspaceRestrictionsDataReader>::marshal (
    const UATM::asirspaceRestrictionsDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::asirspaceRestrictionsDataReader::asirspaceRestrictionsDataReader (void)
{}

UATM::asirspaceRestrictionsDataReader::~asirspaceRestrictionsDataReader (void)
{
}

UATM::asirspaceRestrictionsDataReader_ptr
UATM::asirspaceRestrictionsDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return asirspaceRestrictionsDataReader::_duplicate (
      dynamic_cast<asirspaceRestrictionsDataReader_ptr> (_tao_objref));
}

UATM::asirspaceRestrictionsDataReader_ptr
UATM::asirspaceRestrictionsDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return asirspaceRestrictionsDataReader::_duplicate (
      dynamic_cast<asirspaceRestrictionsDataReader_ptr> (_tao_objref));
}

UATM::asirspaceRestrictionsDataReader_ptr
UATM::asirspaceRestrictionsDataReader::_nil (void)
{
  return 0;
}

UATM::asirspaceRestrictionsDataReader_ptr
UATM::asirspaceRestrictionsDataReader::_duplicate (asirspaceRestrictionsDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::asirspaceRestrictionsDataReader::_tao_release (asirspaceRestrictionsDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::asirspaceRestrictionsDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/asirspaceRestrictionsDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::asirspaceRestrictionsDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/asirspaceRestrictionsDataReader:1.0";
}

::CORBA::Boolean
UATM::asirspaceRestrictionsDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::acceptableRouteTypeSupport.

UATM::acceptableRouteTypeSupport_ptr
TAO::Objref_Traits<UATM::acceptableRouteTypeSupport>::duplicate (
    UATM::acceptableRouteTypeSupport_ptr p)
{
  return UATM::acceptableRouteTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::acceptableRouteTypeSupport>::release (
    UATM::acceptableRouteTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::acceptableRouteTypeSupport_ptr
TAO::Objref_Traits<UATM::acceptableRouteTypeSupport>::nil (void)
{
  return UATM::acceptableRouteTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::acceptableRouteTypeSupport>::marshal (
    const UATM::acceptableRouteTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::acceptableRouteTypeSupport::acceptableRouteTypeSupport (void)
{}

UATM::acceptableRouteTypeSupport::~acceptableRouteTypeSupport (void)
{
}

UATM::acceptableRouteTypeSupport_ptr
UATM::acceptableRouteTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return acceptableRouteTypeSupport::_duplicate (
      dynamic_cast<acceptableRouteTypeSupport_ptr> (_tao_objref));
}

UATM::acceptableRouteTypeSupport_ptr
UATM::acceptableRouteTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return acceptableRouteTypeSupport::_duplicate (
      dynamic_cast<acceptableRouteTypeSupport_ptr> (_tao_objref));
}

UATM::acceptableRouteTypeSupport_ptr
UATM::acceptableRouteTypeSupport::_nil (void)
{
  return 0;
}

UATM::acceptableRouteTypeSupport_ptr
UATM::acceptableRouteTypeSupport::_duplicate (acceptableRouteTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::acceptableRouteTypeSupport::_tao_release (acceptableRouteTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::acceptableRouteTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/acceptableRouteTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::acceptableRouteTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/acceptableRouteTypeSupport:1.0";
}

::CORBA::Boolean
UATM::acceptableRouteTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::acceptableRouteDataWriter.

UATM::acceptableRouteDataWriter_ptr
TAO::Objref_Traits<UATM::acceptableRouteDataWriter>::duplicate (
    UATM::acceptableRouteDataWriter_ptr p)
{
  return UATM::acceptableRouteDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::acceptableRouteDataWriter>::release (
    UATM::acceptableRouteDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::acceptableRouteDataWriter_ptr
TAO::Objref_Traits<UATM::acceptableRouteDataWriter>::nil (void)
{
  return UATM::acceptableRouteDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::acceptableRouteDataWriter>::marshal (
    const UATM::acceptableRouteDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::acceptableRouteDataWriter::acceptableRouteDataWriter (void)
{}

UATM::acceptableRouteDataWriter::~acceptableRouteDataWriter (void)
{
}

UATM::acceptableRouteDataWriter_ptr
UATM::acceptableRouteDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return acceptableRouteDataWriter::_duplicate (
      dynamic_cast<acceptableRouteDataWriter_ptr> (_tao_objref));
}

UATM::acceptableRouteDataWriter_ptr
UATM::acceptableRouteDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return acceptableRouteDataWriter::_duplicate (
      dynamic_cast<acceptableRouteDataWriter_ptr> (_tao_objref));
}

UATM::acceptableRouteDataWriter_ptr
UATM::acceptableRouteDataWriter::_nil (void)
{
  return 0;
}

UATM::acceptableRouteDataWriter_ptr
UATM::acceptableRouteDataWriter::_duplicate (acceptableRouteDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::acceptableRouteDataWriter::_tao_release (acceptableRouteDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::acceptableRouteDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/acceptableRouteDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::acceptableRouteDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/acceptableRouteDataWriter:1.0";
}

::CORBA::Boolean
UATM::acceptableRouteDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::acceptableRouteDataReader.

UATM::acceptableRouteDataReader_ptr
TAO::Objref_Traits<UATM::acceptableRouteDataReader>::duplicate (
    UATM::acceptableRouteDataReader_ptr p)
{
  return UATM::acceptableRouteDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::acceptableRouteDataReader>::release (
    UATM::acceptableRouteDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::acceptableRouteDataReader_ptr
TAO::Objref_Traits<UATM::acceptableRouteDataReader>::nil (void)
{
  return UATM::acceptableRouteDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::acceptableRouteDataReader>::marshal (
    const UATM::acceptableRouteDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::acceptableRouteDataReader::acceptableRouteDataReader (void)
{}

UATM::acceptableRouteDataReader::~acceptableRouteDataReader (void)
{
}

UATM::acceptableRouteDataReader_ptr
UATM::acceptableRouteDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return acceptableRouteDataReader::_duplicate (
      dynamic_cast<acceptableRouteDataReader_ptr> (_tao_objref));
}

UATM::acceptableRouteDataReader_ptr
UATM::acceptableRouteDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return acceptableRouteDataReader::_duplicate (
      dynamic_cast<acceptableRouteDataReader_ptr> (_tao_objref));
}

UATM::acceptableRouteDataReader_ptr
UATM::acceptableRouteDataReader::_nil (void)
{
  return 0;
}

UATM::acceptableRouteDataReader_ptr
UATM::acceptableRouteDataReader::_duplicate (acceptableRouteDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::acceptableRouteDataReader::_tao_release (acceptableRouteDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::acceptableRouteDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/acceptableRouteDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::acceptableRouteDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/acceptableRouteDataReader:1.0";
}

::CORBA::Boolean
UATM::acceptableRouteDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

