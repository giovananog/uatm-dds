// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:148

#ifndef _TAO_IDL_UATMTYPESUPPORTC_PV7MXR_H_
#define _TAO_IDL_UATMTYPESUPPORTC_PV7MXR_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "UATM_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "UATMC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"
#include "dds/DdsDynamicDataC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 21
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::acceptableRoute, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> acceptableRouteSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_ACCEPTABLEROUTETYPESUPPORT__VAR_OUT_CH_)
#define _UATM_ACCEPTABLEROUTETYPESUPPORT__VAR_OUT_CH_

  class acceptableRouteTypeSupport;
  typedef acceptableRouteTypeSupport *acceptableRouteTypeSupport_ptr;
  typedef TAO_Objref_Var_T<acceptableRouteTypeSupport> acceptableRouteTypeSupport_var;
  typedef TAO_Objref_Out_T<acceptableRouteTypeSupport> acceptableRouteTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export acceptableRouteTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef acceptableRouteTypeSupport_ptr _ptr_type;
    typedef acceptableRouteTypeSupport_var _var_type;
    typedef acceptableRouteTypeSupport_out _out_type;

    // The static operations.
    static acceptableRouteTypeSupport_ptr _duplicate (acceptableRouteTypeSupport_ptr obj);

    static void _tao_release (acceptableRouteTypeSupport_ptr obj);

    static acceptableRouteTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static acceptableRouteTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static acceptableRouteTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::acceptableRoute & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::acceptableRoute * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::acceptableRoute & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::acceptableRoute & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::acceptableRoute & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::acceptableRoute & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::acceptableRoute_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::acceptableRoute_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    acceptableRouteTypeSupport (void);

    

    virtual ~acceptableRouteTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport (const acceptableRouteTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport (acceptableRouteTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport &operator= (const acceptableRouteTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteTypeSupport &operator= (acceptableRouteTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_ACCEPTABLEROUTEDATAWRITER__VAR_OUT_CH_)
#define _UATM_ACCEPTABLEROUTEDATAWRITER__VAR_OUT_CH_

  class acceptableRouteDataWriter;
  typedef acceptableRouteDataWriter *acceptableRouteDataWriter_ptr;
  typedef TAO_Objref_Var_T<acceptableRouteDataWriter> acceptableRouteDataWriter_var;
  typedef TAO_Objref_Out_T<acceptableRouteDataWriter> acceptableRouteDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export acceptableRouteDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef acceptableRouteDataWriter_ptr _ptr_type;
    typedef acceptableRouteDataWriter_var _var_type;
    typedef acceptableRouteDataWriter_out _out_type;

    // The static operations.
    static acceptableRouteDataWriter_ptr _duplicate (acceptableRouteDataWriter_ptr obj);

    static void _tao_release (acceptableRouteDataWriter_ptr obj);

    static acceptableRouteDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::acceptableRoute & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::acceptableRoute & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::acceptableRoute & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::acceptableRoute & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::acceptableRoute & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::acceptableRoute & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::acceptableRoute & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    acceptableRouteDataWriter (void);

    

    virtual ~acceptableRouteDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter (const acceptableRouteDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter (acceptableRouteDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter &operator= (const acceptableRouteDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataWriter &operator= (acceptableRouteDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_ACCEPTABLEROUTEDATAREADER__VAR_OUT_CH_)
#define _UATM_ACCEPTABLEROUTEDATAREADER__VAR_OUT_CH_

  class acceptableRouteDataReader;
  typedef acceptableRouteDataReader *acceptableRouteDataReader_ptr;
  typedef TAO_Objref_Var_T<acceptableRouteDataReader> acceptableRouteDataReader_var;
  typedef TAO_Objref_Out_T<acceptableRouteDataReader> acceptableRouteDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export acceptableRouteDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef acceptableRouteDataReader_ptr _ptr_type;
    typedef acceptableRouteDataReader_var _var_type;
    typedef acceptableRouteDataReader_out _out_type;

    // The static operations.
    static acceptableRouteDataReader_ptr _duplicate (acceptableRouteDataReader_ptr obj);

    static void _tao_release (acceptableRouteDataReader_ptr obj);

    static acceptableRouteDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static acceptableRouteDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::acceptableRoute & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::acceptableRoute & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::acceptableRouteSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::acceptableRouteSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::acceptableRoute & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::acceptableRoute & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    acceptableRouteDataReader (void);

    

    virtual ~acceptableRouteDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader (const acceptableRouteDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader (acceptableRouteDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader &operator= (const acceptableRouteDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (acceptableRouteDataReader &operator= (acceptableRouteDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::airspaceRestrictions, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> airspaceRestrictionsSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AIRSPACERESTRICTIONSTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_AIRSPACERESTRICTIONSTYPESUPPORT__VAR_OUT_CH_

  class airspaceRestrictionsTypeSupport;
  typedef airspaceRestrictionsTypeSupport *airspaceRestrictionsTypeSupport_ptr;
  typedef TAO_Objref_Var_T<airspaceRestrictionsTypeSupport> airspaceRestrictionsTypeSupport_var;
  typedef TAO_Objref_Out_T<airspaceRestrictionsTypeSupport> airspaceRestrictionsTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export airspaceRestrictionsTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef airspaceRestrictionsTypeSupport_ptr _ptr_type;
    typedef airspaceRestrictionsTypeSupport_var _var_type;
    typedef airspaceRestrictionsTypeSupport_out _out_type;

    // The static operations.
    static airspaceRestrictionsTypeSupport_ptr _duplicate (airspaceRestrictionsTypeSupport_ptr obj);

    static void _tao_release (airspaceRestrictionsTypeSupport_ptr obj);

    static airspaceRestrictionsTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::airspaceRestrictions & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::airspaceRestrictions * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::airspaceRestrictions & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::airspaceRestrictions & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::airspaceRestrictions & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::airspaceRestrictions & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::airspaceRestrictions_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::airspaceRestrictions_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    airspaceRestrictionsTypeSupport (void);

    

    virtual ~airspaceRestrictionsTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport (const airspaceRestrictionsTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport (airspaceRestrictionsTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport &operator= (const airspaceRestrictionsTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsTypeSupport &operator= (airspaceRestrictionsTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAWRITER__VAR_OUT_CH_)
#define _UATM_AIRSPACERESTRICTIONSDATAWRITER__VAR_OUT_CH_

  class airspaceRestrictionsDataWriter;
  typedef airspaceRestrictionsDataWriter *airspaceRestrictionsDataWriter_ptr;
  typedef TAO_Objref_Var_T<airspaceRestrictionsDataWriter> airspaceRestrictionsDataWriter_var;
  typedef TAO_Objref_Out_T<airspaceRestrictionsDataWriter> airspaceRestrictionsDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export airspaceRestrictionsDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef airspaceRestrictionsDataWriter_ptr _ptr_type;
    typedef airspaceRestrictionsDataWriter_var _var_type;
    typedef airspaceRestrictionsDataWriter_out _out_type;

    // The static operations.
    static airspaceRestrictionsDataWriter_ptr _duplicate (airspaceRestrictionsDataWriter_ptr obj);

    static void _tao_release (airspaceRestrictionsDataWriter_ptr obj);

    static airspaceRestrictionsDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::airspaceRestrictions & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::airspaceRestrictions & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::airspaceRestrictions & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::airspaceRestrictions & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::airspaceRestrictions & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::airspaceRestrictions & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::airspaceRestrictions & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    airspaceRestrictionsDataWriter (void);

    

    virtual ~airspaceRestrictionsDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter (const airspaceRestrictionsDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter (airspaceRestrictionsDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter &operator= (const airspaceRestrictionsDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataWriter &operator= (airspaceRestrictionsDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAREADER__VAR_OUT_CH_)
#define _UATM_AIRSPACERESTRICTIONSDATAREADER__VAR_OUT_CH_

  class airspaceRestrictionsDataReader;
  typedef airspaceRestrictionsDataReader *airspaceRestrictionsDataReader_ptr;
  typedef TAO_Objref_Var_T<airspaceRestrictionsDataReader> airspaceRestrictionsDataReader_var;
  typedef TAO_Objref_Out_T<airspaceRestrictionsDataReader> airspaceRestrictionsDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export airspaceRestrictionsDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef airspaceRestrictionsDataReader_ptr _ptr_type;
    typedef airspaceRestrictionsDataReader_var _var_type;
    typedef airspaceRestrictionsDataReader_out _out_type;

    // The static operations.
    static airspaceRestrictionsDataReader_ptr _duplicate (airspaceRestrictionsDataReader_ptr obj);

    static void _tao_release (airspaceRestrictionsDataReader_ptr obj);

    static airspaceRestrictionsDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static airspaceRestrictionsDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::airspaceRestrictions & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::airspaceRestrictions & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::airspaceRestrictionsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::airspaceRestrictionsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::airspaceRestrictions & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::airspaceRestrictions & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    airspaceRestrictionsDataReader (void);

    

    virtual ~airspaceRestrictionsDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader (const airspaceRestrictionsDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader (airspaceRestrictionsDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader &operator= (const airspaceRestrictionsDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (airspaceRestrictionsDataReader &operator= (airspaceRestrictionsDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::availabilityInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> availabilityInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AVAILABILITYINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_AVAILABILITYINFOTYPESUPPORT__VAR_OUT_CH_

  class availabilityInfoTypeSupport;
  typedef availabilityInfoTypeSupport *availabilityInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<availabilityInfoTypeSupport> availabilityInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<availabilityInfoTypeSupport> availabilityInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export availabilityInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef availabilityInfoTypeSupport_ptr _ptr_type;
    typedef availabilityInfoTypeSupport_var _var_type;
    typedef availabilityInfoTypeSupport_out _out_type;

    // The static operations.
    static availabilityInfoTypeSupport_ptr _duplicate (availabilityInfoTypeSupport_ptr obj);

    static void _tao_release (availabilityInfoTypeSupport_ptr obj);

    static availabilityInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static availabilityInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static availabilityInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::availabilityInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::availabilityInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::availabilityInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::availabilityInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::availabilityInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::availabilityInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::availabilityInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::availabilityInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    availabilityInfoTypeSupport (void);

    

    virtual ~availabilityInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport (const availabilityInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport (availabilityInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport &operator= (const availabilityInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoTypeSupport &operator= (availabilityInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AVAILABILITYINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_AVAILABILITYINFODATAWRITER__VAR_OUT_CH_

  class availabilityInfoDataWriter;
  typedef availabilityInfoDataWriter *availabilityInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<availabilityInfoDataWriter> availabilityInfoDataWriter_var;
  typedef TAO_Objref_Out_T<availabilityInfoDataWriter> availabilityInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export availabilityInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef availabilityInfoDataWriter_ptr _ptr_type;
    typedef availabilityInfoDataWriter_var _var_type;
    typedef availabilityInfoDataWriter_out _out_type;

    // The static operations.
    static availabilityInfoDataWriter_ptr _duplicate (availabilityInfoDataWriter_ptr obj);

    static void _tao_release (availabilityInfoDataWriter_ptr obj);

    static availabilityInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::availabilityInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::availabilityInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::availabilityInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::availabilityInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::availabilityInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::availabilityInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::availabilityInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    availabilityInfoDataWriter (void);

    

    virtual ~availabilityInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter (const availabilityInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter (availabilityInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter &operator= (const availabilityInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataWriter &operator= (availabilityInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_AVAILABILITYINFODATAREADER__VAR_OUT_CH_)
#define _UATM_AVAILABILITYINFODATAREADER__VAR_OUT_CH_

  class availabilityInfoDataReader;
  typedef availabilityInfoDataReader *availabilityInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<availabilityInfoDataReader> availabilityInfoDataReader_var;
  typedef TAO_Objref_Out_T<availabilityInfoDataReader> availabilityInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export availabilityInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef availabilityInfoDataReader_ptr _ptr_type;
    typedef availabilityInfoDataReader_var _var_type;
    typedef availabilityInfoDataReader_out _out_type;

    // The static operations.
    static availabilityInfoDataReader_ptr _duplicate (availabilityInfoDataReader_ptr obj);

    static void _tao_release (availabilityInfoDataReader_ptr obj);

    static availabilityInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static availabilityInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::availabilityInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::availabilityInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::availabilityInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::availabilityInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::availabilityInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::availabilityInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    availabilityInfoDataReader (void);

    

    virtual ~availabilityInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader (const availabilityInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader (availabilityInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader &operator= (const availabilityInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (availabilityInfoDataReader &operator= (availabilityInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::bookingFlightRequest, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> bookingFlightRequestSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_BOOKINGFLIGHTREQUESTTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_BOOKINGFLIGHTREQUESTTYPESUPPORT__VAR_OUT_CH_

  class bookingFlightRequestTypeSupport;
  typedef bookingFlightRequestTypeSupport *bookingFlightRequestTypeSupport_ptr;
  typedef TAO_Objref_Var_T<bookingFlightRequestTypeSupport> bookingFlightRequestTypeSupport_var;
  typedef TAO_Objref_Out_T<bookingFlightRequestTypeSupport> bookingFlightRequestTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export bookingFlightRequestTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef bookingFlightRequestTypeSupport_ptr _ptr_type;
    typedef bookingFlightRequestTypeSupport_var _var_type;
    typedef bookingFlightRequestTypeSupport_out _out_type;

    // The static operations.
    static bookingFlightRequestTypeSupport_ptr _duplicate (bookingFlightRequestTypeSupport_ptr obj);

    static void _tao_release (bookingFlightRequestTypeSupport_ptr obj);

    static bookingFlightRequestTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static bookingFlightRequestTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static bookingFlightRequestTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::bookingFlightRequest & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::bookingFlightRequest * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::bookingFlightRequest & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::bookingFlightRequest & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::bookingFlightRequest & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::bookingFlightRequest & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::bookingFlightRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::bookingFlightRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    bookingFlightRequestTypeSupport (void);

    

    virtual ~bookingFlightRequestTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestTypeSupport (const bookingFlightRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestTypeSupport (bookingFlightRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestTypeSupport &operator= (const bookingFlightRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestTypeSupport &operator= (bookingFlightRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_BOOKINGFLIGHTREQUESTDATAWRITER__VAR_OUT_CH_)
#define _UATM_BOOKINGFLIGHTREQUESTDATAWRITER__VAR_OUT_CH_

  class bookingFlightRequestDataWriter;
  typedef bookingFlightRequestDataWriter *bookingFlightRequestDataWriter_ptr;
  typedef TAO_Objref_Var_T<bookingFlightRequestDataWriter> bookingFlightRequestDataWriter_var;
  typedef TAO_Objref_Out_T<bookingFlightRequestDataWriter> bookingFlightRequestDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export bookingFlightRequestDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef bookingFlightRequestDataWriter_ptr _ptr_type;
    typedef bookingFlightRequestDataWriter_var _var_type;
    typedef bookingFlightRequestDataWriter_out _out_type;

    // The static operations.
    static bookingFlightRequestDataWriter_ptr _duplicate (bookingFlightRequestDataWriter_ptr obj);

    static void _tao_release (bookingFlightRequestDataWriter_ptr obj);

    static bookingFlightRequestDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static bookingFlightRequestDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static bookingFlightRequestDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::bookingFlightRequest & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::bookingFlightRequest & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::bookingFlightRequest & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::bookingFlightRequest & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::bookingFlightRequest & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::bookingFlightRequest & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::bookingFlightRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::bookingFlightRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::bookingFlightRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::bookingFlightRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    bookingFlightRequestDataWriter (void);

    

    virtual ~bookingFlightRequestDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataWriter (const bookingFlightRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataWriter (bookingFlightRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataWriter &operator= (const bookingFlightRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataWriter &operator= (bookingFlightRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_BOOKINGFLIGHTREQUESTDATAREADER__VAR_OUT_CH_)
#define _UATM_BOOKINGFLIGHTREQUESTDATAREADER__VAR_OUT_CH_

  class bookingFlightRequestDataReader;
  typedef bookingFlightRequestDataReader *bookingFlightRequestDataReader_ptr;
  typedef TAO_Objref_Var_T<bookingFlightRequestDataReader> bookingFlightRequestDataReader_var;
  typedef TAO_Objref_Out_T<bookingFlightRequestDataReader> bookingFlightRequestDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export bookingFlightRequestDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef bookingFlightRequestDataReader_ptr _ptr_type;
    typedef bookingFlightRequestDataReader_var _var_type;
    typedef bookingFlightRequestDataReader_out _out_type;

    // The static operations.
    static bookingFlightRequestDataReader_ptr _duplicate (bookingFlightRequestDataReader_ptr obj);

    static void _tao_release (bookingFlightRequestDataReader_ptr obj);

    static bookingFlightRequestDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static bookingFlightRequestDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static bookingFlightRequestDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::bookingFlightRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::bookingFlightRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::bookingFlightRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::bookingFlightRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::bookingFlightRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::bookingFlightRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::bookingFlightRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::bookingFlightRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::bookingFlightRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    bookingFlightRequestDataReader (void);

    

    virtual ~bookingFlightRequestDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataReader (const bookingFlightRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataReader (bookingFlightRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataReader &operator= (const bookingFlightRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (bookingFlightRequestDataReader &operator= (bookingFlightRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightAuthorization, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightAuthorizationSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONTYPESUPPORT__VAR_OUT_CH_

  class flightAuthorizationTypeSupport;
  typedef flightAuthorizationTypeSupport *flightAuthorizationTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationTypeSupport> flightAuthorizationTypeSupport_var;
  typedef TAO_Objref_Out_T<flightAuthorizationTypeSupport> flightAuthorizationTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationTypeSupport_ptr _ptr_type;
    typedef flightAuthorizationTypeSupport_var _var_type;
    typedef flightAuthorizationTypeSupport_out _out_type;

    // The static operations.
    static flightAuthorizationTypeSupport_ptr _duplicate (flightAuthorizationTypeSupport_ptr obj);

    static void _tao_release (flightAuthorizationTypeSupport_ptr obj);

    static flightAuthorizationTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightAuthorization & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightAuthorization * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightAuthorization & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightAuthorization & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightAuthorization & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightAuthorization & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightAuthorization_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightAuthorization_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationTypeSupport (void);

    

    virtual ~flightAuthorizationTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationTypeSupport (const flightAuthorizationTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationTypeSupport (flightAuthorizationTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationTypeSupport &operator= (const flightAuthorizationTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationTypeSupport &operator= (flightAuthorizationTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONDATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONDATAWRITER__VAR_OUT_CH_

  class flightAuthorizationDataWriter;
  typedef flightAuthorizationDataWriter *flightAuthorizationDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationDataWriter> flightAuthorizationDataWriter_var;
  typedef TAO_Objref_Out_T<flightAuthorizationDataWriter> flightAuthorizationDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationDataWriter_ptr _ptr_type;
    typedef flightAuthorizationDataWriter_var _var_type;
    typedef flightAuthorizationDataWriter_out _out_type;

    // The static operations.
    static flightAuthorizationDataWriter_ptr _duplicate (flightAuthorizationDataWriter_ptr obj);

    static void _tao_release (flightAuthorizationDataWriter_ptr obj);

    static flightAuthorizationDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightAuthorization & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightAuthorization & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightAuthorization & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightAuthorization & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightAuthorization & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightAuthorization & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightAuthorization & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightAuthorization & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAuthorization & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAuthorization & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationDataWriter (void);

    

    virtual ~flightAuthorizationDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataWriter (const flightAuthorizationDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataWriter (flightAuthorizationDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataWriter &operator= (const flightAuthorizationDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataWriter &operator= (flightAuthorizationDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONDATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONDATAREADER__VAR_OUT_CH_

  class flightAuthorizationDataReader;
  typedef flightAuthorizationDataReader *flightAuthorizationDataReader_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationDataReader> flightAuthorizationDataReader_var;
  typedef TAO_Objref_Out_T<flightAuthorizationDataReader> flightAuthorizationDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationDataReader_ptr _ptr_type;
    typedef flightAuthorizationDataReader_var _var_type;
    typedef flightAuthorizationDataReader_out _out_type;

    // The static operations.
    static flightAuthorizationDataReader_ptr _duplicate (flightAuthorizationDataReader_ptr obj);

    static void _tao_release (flightAuthorizationDataReader_ptr obj);

    static flightAuthorizationDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightAuthorizationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightAuthorizationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightAuthorization & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightAuthorization & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightAuthorizationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightAuthorizationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightAuthorizationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAuthorization & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAuthorization & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationDataReader (void);

    

    virtual ~flightAuthorizationDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataReader (const flightAuthorizationDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataReader (flightAuthorizationDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataReader &operator= (const flightAuthorizationDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationDataReader &operator= (flightAuthorizationDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightChanceRec, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightChanceRecSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCHANCERECTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTCHANCERECTYPESUPPORT__VAR_OUT_CH_

  class flightChanceRecTypeSupport;
  typedef flightChanceRecTypeSupport *flightChanceRecTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightChanceRecTypeSupport> flightChanceRecTypeSupport_var;
  typedef TAO_Objref_Out_T<flightChanceRecTypeSupport> flightChanceRecTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightChanceRecTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightChanceRecTypeSupport_ptr _ptr_type;
    typedef flightChanceRecTypeSupport_var _var_type;
    typedef flightChanceRecTypeSupport_out _out_type;

    // The static operations.
    static flightChanceRecTypeSupport_ptr _duplicate (flightChanceRecTypeSupport_ptr obj);

    static void _tao_release (flightChanceRecTypeSupport_ptr obj);

    static flightChanceRecTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightChanceRecTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightChanceRecTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightChanceRec & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightChanceRec * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightChanceRec & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightChanceRec & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightChanceRec & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightChanceRec & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightChanceRec_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightChanceRec_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightChanceRecTypeSupport (void);

    

    virtual ~flightChanceRecTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecTypeSupport (const flightChanceRecTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecTypeSupport (flightChanceRecTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecTypeSupport &operator= (const flightChanceRecTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecTypeSupport &operator= (flightChanceRecTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCHANCERECDATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTCHANCERECDATAWRITER__VAR_OUT_CH_

  class flightChanceRecDataWriter;
  typedef flightChanceRecDataWriter *flightChanceRecDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightChanceRecDataWriter> flightChanceRecDataWriter_var;
  typedef TAO_Objref_Out_T<flightChanceRecDataWriter> flightChanceRecDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightChanceRecDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightChanceRecDataWriter_ptr _ptr_type;
    typedef flightChanceRecDataWriter_var _var_type;
    typedef flightChanceRecDataWriter_out _out_type;

    // The static operations.
    static flightChanceRecDataWriter_ptr _duplicate (flightChanceRecDataWriter_ptr obj);

    static void _tao_release (flightChanceRecDataWriter_ptr obj);

    static flightChanceRecDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightChanceRecDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightChanceRecDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightChanceRec & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightChanceRec & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightChanceRec & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightChanceRec & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightChanceRec & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightChanceRec & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightChanceRec & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightChanceRec & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightChanceRec & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightChanceRec & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightChanceRecDataWriter (void);

    

    virtual ~flightChanceRecDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataWriter (const flightChanceRecDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataWriter (flightChanceRecDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataWriter &operator= (const flightChanceRecDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataWriter &operator= (flightChanceRecDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCHANCERECDATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTCHANCERECDATAREADER__VAR_OUT_CH_

  class flightChanceRecDataReader;
  typedef flightChanceRecDataReader *flightChanceRecDataReader_ptr;
  typedef TAO_Objref_Var_T<flightChanceRecDataReader> flightChanceRecDataReader_var;
  typedef TAO_Objref_Out_T<flightChanceRecDataReader> flightChanceRecDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightChanceRecDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightChanceRecDataReader_ptr _ptr_type;
    typedef flightChanceRecDataReader_var _var_type;
    typedef flightChanceRecDataReader_out _out_type;

    // The static operations.
    static flightChanceRecDataReader_ptr _duplicate (flightChanceRecDataReader_ptr obj);

    static void _tao_release (flightChanceRecDataReader_ptr obj);

    static flightChanceRecDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightChanceRecDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightChanceRecDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightChanceRecSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightChanceRecSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightChanceRec & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightChanceRec & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightChanceRecSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightChanceRecSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightChanceRecSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightChanceRec & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightChanceRec & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightChanceRecDataReader (void);

    

    virtual ~flightChanceRecDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataReader (const flightChanceRecDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataReader (flightChanceRecDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataReader &operator= (const flightChanceRecDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightChanceRecDataReader &operator= (flightChanceRecDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightCoordination, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightCoordinationSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCOORDINATIONTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTCOORDINATIONTYPESUPPORT__VAR_OUT_CH_

  class flightCoordinationTypeSupport;
  typedef flightCoordinationTypeSupport *flightCoordinationTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightCoordinationTypeSupport> flightCoordinationTypeSupport_var;
  typedef TAO_Objref_Out_T<flightCoordinationTypeSupport> flightCoordinationTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightCoordinationTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightCoordinationTypeSupport_ptr _ptr_type;
    typedef flightCoordinationTypeSupport_var _var_type;
    typedef flightCoordinationTypeSupport_out _out_type;

    // The static operations.
    static flightCoordinationTypeSupport_ptr _duplicate (flightCoordinationTypeSupport_ptr obj);

    static void _tao_release (flightCoordinationTypeSupport_ptr obj);

    static flightCoordinationTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightCoordinationTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightCoordinationTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightCoordination & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightCoordination * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightCoordination & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightCoordination & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightCoordination & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightCoordination & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightCoordination_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightCoordination_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightCoordinationTypeSupport (void);

    

    virtual ~flightCoordinationTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport (const flightCoordinationTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport (flightCoordinationTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport &operator= (const flightCoordinationTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport &operator= (flightCoordinationTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCOORDINATIONDATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTCOORDINATIONDATAWRITER__VAR_OUT_CH_

  class flightCoordinationDataWriter;
  typedef flightCoordinationDataWriter *flightCoordinationDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightCoordinationDataWriter> flightCoordinationDataWriter_var;
  typedef TAO_Objref_Out_T<flightCoordinationDataWriter> flightCoordinationDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightCoordinationDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightCoordinationDataWriter_ptr _ptr_type;
    typedef flightCoordinationDataWriter_var _var_type;
    typedef flightCoordinationDataWriter_out _out_type;

    // The static operations.
    static flightCoordinationDataWriter_ptr _duplicate (flightCoordinationDataWriter_ptr obj);

    static void _tao_release (flightCoordinationDataWriter_ptr obj);

    static flightCoordinationDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightCoordination & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightCoordination & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightCoordination & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightCoordination & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightCoordination & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightCoordination & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightCoordinationDataWriter (void);

    

    virtual ~flightCoordinationDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter (const flightCoordinationDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter (flightCoordinationDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter &operator= (const flightCoordinationDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter &operator= (flightCoordinationDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCOORDINATIONDATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTCOORDINATIONDATAREADER__VAR_OUT_CH_

  class flightCoordinationDataReader;
  typedef flightCoordinationDataReader *flightCoordinationDataReader_ptr;
  typedef TAO_Objref_Var_T<flightCoordinationDataReader> flightCoordinationDataReader_var;
  typedef TAO_Objref_Out_T<flightCoordinationDataReader> flightCoordinationDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightCoordinationDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightCoordinationDataReader_ptr _ptr_type;
    typedef flightCoordinationDataReader_var _var_type;
    typedef flightCoordinationDataReader_out _out_type;

    // The static operations.
    static flightCoordinationDataReader_ptr _duplicate (flightCoordinationDataReader_ptr obj);

    static void _tao_release (flightCoordinationDataReader_ptr obj);

    static flightCoordinationDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightCoordination & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightCoordination & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightCoordination & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightCoordination & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightCoordinationDataReader (void);

    

    virtual ~flightCoordinationDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader (const flightCoordinationDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader (flightCoordinationDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader &operator= (const flightCoordinationDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader &operator= (flightCoordinationDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightRequestInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightRequestInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTREQUESTINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTREQUESTINFOTYPESUPPORT__VAR_OUT_CH_

  class flightRequestInfoTypeSupport;
  typedef flightRequestInfoTypeSupport *flightRequestInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightRequestInfoTypeSupport> flightRequestInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<flightRequestInfoTypeSupport> flightRequestInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRequestInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRequestInfoTypeSupport_ptr _ptr_type;
    typedef flightRequestInfoTypeSupport_var _var_type;
    typedef flightRequestInfoTypeSupport_out _out_type;

    // The static operations.
    static flightRequestInfoTypeSupport_ptr _duplicate (flightRequestInfoTypeSupport_ptr obj);

    static void _tao_release (flightRequestInfoTypeSupport_ptr obj);

    static flightRequestInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightRequestInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightRequestInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightRequestInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightRequestInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightRequestInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightRequestInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightRequestInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightRequestInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRequestInfoTypeSupport (void);

    

    virtual ~flightRequestInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport (const flightRequestInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport (flightRequestInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport &operator= (const flightRequestInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport &operator= (flightRequestInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTREQUESTINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTREQUESTINFODATAWRITER__VAR_OUT_CH_

  class flightRequestInfoDataWriter;
  typedef flightRequestInfoDataWriter *flightRequestInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightRequestInfoDataWriter> flightRequestInfoDataWriter_var;
  typedef TAO_Objref_Out_T<flightRequestInfoDataWriter> flightRequestInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRequestInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRequestInfoDataWriter_ptr _ptr_type;
    typedef flightRequestInfoDataWriter_var _var_type;
    typedef flightRequestInfoDataWriter_out _out_type;

    // The static operations.
    static flightRequestInfoDataWriter_ptr _duplicate (flightRequestInfoDataWriter_ptr obj);

    static void _tao_release (flightRequestInfoDataWriter_ptr obj);

    static flightRequestInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightRequestInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightRequestInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightRequestInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightRequestInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightRequestInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightRequestInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRequestInfoDataWriter (void);

    

    virtual ~flightRequestInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter (const flightRequestInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter (flightRequestInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter &operator= (const flightRequestInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter &operator= (flightRequestInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTREQUESTINFODATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTREQUESTINFODATAREADER__VAR_OUT_CH_

  class flightRequestInfoDataReader;
  typedef flightRequestInfoDataReader *flightRequestInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<flightRequestInfoDataReader> flightRequestInfoDataReader_var;
  typedef TAO_Objref_Out_T<flightRequestInfoDataReader> flightRequestInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRequestInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRequestInfoDataReader_ptr _ptr_type;
    typedef flightRequestInfoDataReader_var _var_type;
    typedef flightRequestInfoDataReader_out _out_type;

    // The static operations.
    static flightRequestInfoDataReader_ptr _duplicate (flightRequestInfoDataReader_ptr obj);

    static void _tao_release (flightRequestInfoDataReader_ptr obj);

    static flightRequestInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightRequestInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightRequestInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightRequestInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightRequestInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRequestInfoDataReader (void);

    

    virtual ~flightRequestInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader (const flightRequestInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader (flightRequestInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader &operator= (const flightRequestInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader &operator= (flightRequestInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightRoutesInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightRoutesInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTROUTESINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTROUTESINFOTYPESUPPORT__VAR_OUT_CH_

  class flightRoutesInfoTypeSupport;
  typedef flightRoutesInfoTypeSupport *flightRoutesInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightRoutesInfoTypeSupport> flightRoutesInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<flightRoutesInfoTypeSupport> flightRoutesInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRoutesInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRoutesInfoTypeSupport_ptr _ptr_type;
    typedef flightRoutesInfoTypeSupport_var _var_type;
    typedef flightRoutesInfoTypeSupport_out _out_type;

    // The static operations.
    static flightRoutesInfoTypeSupport_ptr _duplicate (flightRoutesInfoTypeSupport_ptr obj);

    static void _tao_release (flightRoutesInfoTypeSupport_ptr obj);

    static flightRoutesInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRoutesInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRoutesInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightRoutesInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightRoutesInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightRoutesInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightRoutesInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightRoutesInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightRoutesInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightRoutesInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightRoutesInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRoutesInfoTypeSupport (void);

    

    virtual ~flightRoutesInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoTypeSupport (const flightRoutesInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoTypeSupport (flightRoutesInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoTypeSupport &operator= (const flightRoutesInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoTypeSupport &operator= (flightRoutesInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTROUTESINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTROUTESINFODATAWRITER__VAR_OUT_CH_

  class flightRoutesInfoDataWriter;
  typedef flightRoutesInfoDataWriter *flightRoutesInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightRoutesInfoDataWriter> flightRoutesInfoDataWriter_var;
  typedef TAO_Objref_Out_T<flightRoutesInfoDataWriter> flightRoutesInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRoutesInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRoutesInfoDataWriter_ptr _ptr_type;
    typedef flightRoutesInfoDataWriter_var _var_type;
    typedef flightRoutesInfoDataWriter_out _out_type;

    // The static operations.
    static flightRoutesInfoDataWriter_ptr _duplicate (flightRoutesInfoDataWriter_ptr obj);

    static void _tao_release (flightRoutesInfoDataWriter_ptr obj);

    static flightRoutesInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRoutesInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRoutesInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightRoutesInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightRoutesInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightRoutesInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightRoutesInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightRoutesInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightRoutesInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightRoutesInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightRoutesInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightRoutesInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightRoutesInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRoutesInfoDataWriter (void);

    

    virtual ~flightRoutesInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataWriter (const flightRoutesInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataWriter (flightRoutesInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataWriter &operator= (const flightRoutesInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataWriter &operator= (flightRoutesInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTROUTESINFODATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTROUTESINFODATAREADER__VAR_OUT_CH_

  class flightRoutesInfoDataReader;
  typedef flightRoutesInfoDataReader *flightRoutesInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<flightRoutesInfoDataReader> flightRoutesInfoDataReader_var;
  typedef TAO_Objref_Out_T<flightRoutesInfoDataReader> flightRoutesInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRoutesInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRoutesInfoDataReader_ptr _ptr_type;
    typedef flightRoutesInfoDataReader_var _var_type;
    typedef flightRoutesInfoDataReader_out _out_type;

    // The static operations.
    static flightRoutesInfoDataReader_ptr _duplicate (flightRoutesInfoDataReader_ptr obj);

    static void _tao_release (flightRoutesInfoDataReader_ptr obj);

    static flightRoutesInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRoutesInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRoutesInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightRoutesInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightRoutesInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightRoutesInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightRoutesInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightRoutesInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightRoutesInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightRoutesInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightRoutesInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightRoutesInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRoutesInfoDataReader (void);

    

    virtual ~flightRoutesInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataReader (const flightRoutesInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataReader (flightRoutesInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataReader &operator= (const flightRoutesInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRoutesInfoDataReader &operator= (flightRoutesInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::tolPadRequest, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> tolPadRequestSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TOLPADREQUESTTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_TOLPADREQUESTTYPESUPPORT__VAR_OUT_CH_

  class tolPadRequestTypeSupport;
  typedef tolPadRequestTypeSupport *tolPadRequestTypeSupport_ptr;
  typedef TAO_Objref_Var_T<tolPadRequestTypeSupport> tolPadRequestTypeSupport_var;
  typedef TAO_Objref_Out_T<tolPadRequestTypeSupport> tolPadRequestTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export tolPadRequestTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef tolPadRequestTypeSupport_ptr _ptr_type;
    typedef tolPadRequestTypeSupport_var _var_type;
    typedef tolPadRequestTypeSupport_out _out_type;

    // The static operations.
    static tolPadRequestTypeSupport_ptr _duplicate (tolPadRequestTypeSupport_ptr obj);

    static void _tao_release (tolPadRequestTypeSupport_ptr obj);

    static tolPadRequestTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static tolPadRequestTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static tolPadRequestTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::tolPadRequest & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::tolPadRequest * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::tolPadRequest & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::tolPadRequest & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::tolPadRequest & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::tolPadRequest & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::tolPadRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::tolPadRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    tolPadRequestTypeSupport (void);

    

    virtual ~tolPadRequestTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport (const tolPadRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport (tolPadRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport &operator= (const tolPadRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestTypeSupport &operator= (tolPadRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TOLPADREQUESTDATAWRITER__VAR_OUT_CH_)
#define _UATM_TOLPADREQUESTDATAWRITER__VAR_OUT_CH_

  class tolPadRequestDataWriter;
  typedef tolPadRequestDataWriter *tolPadRequestDataWriter_ptr;
  typedef TAO_Objref_Var_T<tolPadRequestDataWriter> tolPadRequestDataWriter_var;
  typedef TAO_Objref_Out_T<tolPadRequestDataWriter> tolPadRequestDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export tolPadRequestDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef tolPadRequestDataWriter_ptr _ptr_type;
    typedef tolPadRequestDataWriter_var _var_type;
    typedef tolPadRequestDataWriter_out _out_type;

    // The static operations.
    static tolPadRequestDataWriter_ptr _duplicate (tolPadRequestDataWriter_ptr obj);

    static void _tao_release (tolPadRequestDataWriter_ptr obj);

    static tolPadRequestDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::tolPadRequest & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::tolPadRequest & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::tolPadRequest & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::tolPadRequest & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::tolPadRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::tolPadRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::tolPadRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    tolPadRequestDataWriter (void);

    

    virtual ~tolPadRequestDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter (const tolPadRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter (tolPadRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter &operator= (const tolPadRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataWriter &operator= (tolPadRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TOLPADREQUESTDATAREADER__VAR_OUT_CH_)
#define _UATM_TOLPADREQUESTDATAREADER__VAR_OUT_CH_

  class tolPadRequestDataReader;
  typedef tolPadRequestDataReader *tolPadRequestDataReader_ptr;
  typedef TAO_Objref_Var_T<tolPadRequestDataReader> tolPadRequestDataReader_var;
  typedef TAO_Objref_Out_T<tolPadRequestDataReader> tolPadRequestDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export tolPadRequestDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef tolPadRequestDataReader_ptr _ptr_type;
    typedef tolPadRequestDataReader_var _var_type;
    typedef tolPadRequestDataReader_out _out_type;

    // The static operations.
    static tolPadRequestDataReader_ptr _duplicate (tolPadRequestDataReader_ptr obj);

    static void _tao_release (tolPadRequestDataReader_ptr obj);

    static tolPadRequestDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static tolPadRequestDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::tolPadRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::tolPadRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::tolPadRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::tolPadRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::tolPadRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::tolPadRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    tolPadRequestDataReader (void);

    

    virtual ~tolPadRequestDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader (const tolPadRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader (tolPadRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader &operator= (const tolPadRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (tolPadRequestDataReader &operator= (tolPadRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::trafficFlowsInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> trafficFlowsInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TRAFFICFLOWSINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_TRAFFICFLOWSINFOTYPESUPPORT__VAR_OUT_CH_

  class trafficFlowsInfoTypeSupport;
  typedef trafficFlowsInfoTypeSupport *trafficFlowsInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<trafficFlowsInfoTypeSupport> trafficFlowsInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<trafficFlowsInfoTypeSupport> trafficFlowsInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export trafficFlowsInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef trafficFlowsInfoTypeSupport_ptr _ptr_type;
    typedef trafficFlowsInfoTypeSupport_var _var_type;
    typedef trafficFlowsInfoTypeSupport_out _out_type;

    // The static operations.
    static trafficFlowsInfoTypeSupport_ptr _duplicate (trafficFlowsInfoTypeSupport_ptr obj);

    static void _tao_release (trafficFlowsInfoTypeSupport_ptr obj);

    static trafficFlowsInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::trafficFlowsInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::trafficFlowsInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::trafficFlowsInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::trafficFlowsInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::trafficFlowsInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::trafficFlowsInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::trafficFlowsInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::trafficFlowsInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    trafficFlowsInfoTypeSupport (void);

    

    virtual ~trafficFlowsInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport (const trafficFlowsInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport (trafficFlowsInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport &operator= (const trafficFlowsInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoTypeSupport &operator= (trafficFlowsInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TRAFFICFLOWSINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_TRAFFICFLOWSINFODATAWRITER__VAR_OUT_CH_

  class trafficFlowsInfoDataWriter;
  typedef trafficFlowsInfoDataWriter *trafficFlowsInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<trafficFlowsInfoDataWriter> trafficFlowsInfoDataWriter_var;
  typedef TAO_Objref_Out_T<trafficFlowsInfoDataWriter> trafficFlowsInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export trafficFlowsInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef trafficFlowsInfoDataWriter_ptr _ptr_type;
    typedef trafficFlowsInfoDataWriter_var _var_type;
    typedef trafficFlowsInfoDataWriter_out _out_type;

    // The static operations.
    static trafficFlowsInfoDataWriter_ptr _duplicate (trafficFlowsInfoDataWriter_ptr obj);

    static void _tao_release (trafficFlowsInfoDataWriter_ptr obj);

    static trafficFlowsInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::trafficFlowsInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::trafficFlowsInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::trafficFlowsInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::trafficFlowsInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::trafficFlowsInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    trafficFlowsInfoDataWriter (void);

    

    virtual ~trafficFlowsInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter (const trafficFlowsInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter (trafficFlowsInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter &operator= (const trafficFlowsInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataWriter &operator= (trafficFlowsInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_TRAFFICFLOWSINFODATAREADER__VAR_OUT_CH_)
#define _UATM_TRAFFICFLOWSINFODATAREADER__VAR_OUT_CH_

  class trafficFlowsInfoDataReader;
  typedef trafficFlowsInfoDataReader *trafficFlowsInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<trafficFlowsInfoDataReader> trafficFlowsInfoDataReader_var;
  typedef TAO_Objref_Out_T<trafficFlowsInfoDataReader> trafficFlowsInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export trafficFlowsInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef trafficFlowsInfoDataReader_ptr _ptr_type;
    typedef trafficFlowsInfoDataReader_var _var_type;
    typedef trafficFlowsInfoDataReader_out _out_type;

    // The static operations.
    static trafficFlowsInfoDataReader_ptr _duplicate (trafficFlowsInfoDataReader_ptr obj);

    static void _tao_release (trafficFlowsInfoDataReader_ptr obj);

    static trafficFlowsInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static trafficFlowsInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::trafficFlowsInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::trafficFlowsInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::trafficFlowsInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::trafficFlowsInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::trafficFlowsInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::trafficFlowsInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    trafficFlowsInfoDataReader (void);

    

    virtual ~trafficFlowsInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader (const trafficFlowsInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader (trafficFlowsInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader &operator= (const trafficFlowsInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (trafficFlowsInfoDataReader &operator= (trafficFlowsInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightAuthorizationRequest, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightAuthorizationRequestSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__VAR_OUT_CH_

  class flightAuthorizationRequestTypeSupport;
  typedef flightAuthorizationRequestTypeSupport *flightAuthorizationRequestTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationRequestTypeSupport> flightAuthorizationRequestTypeSupport_var;
  typedef TAO_Objref_Out_T<flightAuthorizationRequestTypeSupport> flightAuthorizationRequestTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationRequestTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationRequestTypeSupport_ptr _ptr_type;
    typedef flightAuthorizationRequestTypeSupport_var _var_type;
    typedef flightAuthorizationRequestTypeSupport_out _out_type;

    // The static operations.
    static flightAuthorizationRequestTypeSupport_ptr _duplicate (flightAuthorizationRequestTypeSupport_ptr obj);

    static void _tao_release (flightAuthorizationRequestTypeSupport_ptr obj);

    static flightAuthorizationRequestTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightAuthorizationRequest & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightAuthorizationRequest * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightAuthorizationRequest & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightAuthorizationRequest & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightAuthorizationRequest & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightAuthorizationRequest & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightAuthorizationRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightAuthorizationRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationRequestTypeSupport (void);

    

    virtual ~flightAuthorizationRequestTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport (const flightAuthorizationRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport (flightAuthorizationRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport &operator= (const flightAuthorizationRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport &operator= (flightAuthorizationRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__VAR_OUT_CH_

  class flightAuthorizationRequestDataWriter;
  typedef flightAuthorizationRequestDataWriter *flightAuthorizationRequestDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationRequestDataWriter> flightAuthorizationRequestDataWriter_var;
  typedef TAO_Objref_Out_T<flightAuthorizationRequestDataWriter> flightAuthorizationRequestDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationRequestDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationRequestDataWriter_ptr _ptr_type;
    typedef flightAuthorizationRequestDataWriter_var _var_type;
    typedef flightAuthorizationRequestDataWriter_out _out_type;

    // The static operations.
    static flightAuthorizationRequestDataWriter_ptr _duplicate (flightAuthorizationRequestDataWriter_ptr obj);

    static void _tao_release (flightAuthorizationRequestDataWriter_ptr obj);

    static flightAuthorizationRequestDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightAuthorizationRequest & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightAuthorizationRequest & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAuthorizationRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAuthorizationRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationRequestDataWriter (void);

    

    virtual ~flightAuthorizationRequestDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter (const flightAuthorizationRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter (flightAuthorizationRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter &operator= (const flightAuthorizationRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter &operator= (flightAuthorizationRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__VAR_OUT_CH_

  class flightAuthorizationRequestDataReader;
  typedef flightAuthorizationRequestDataReader *flightAuthorizationRequestDataReader_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationRequestDataReader> flightAuthorizationRequestDataReader_var;
  typedef TAO_Objref_Out_T<flightAuthorizationRequestDataReader> flightAuthorizationRequestDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationRequestDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationRequestDataReader_ptr _ptr_type;
    typedef flightAuthorizationRequestDataReader_var _var_type;
    typedef flightAuthorizationRequestDataReader_out _out_type;

    // The static operations.
    static flightAuthorizationRequestDataReader_ptr _duplicate (flightAuthorizationRequestDataReader_ptr obj);

    static void _tao_release (flightAuthorizationRequestDataReader_ptr obj);

    static flightAuthorizationRequestDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightAuthorizationRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightAuthorizationRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAuthorizationRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAuthorizationRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationRequestDataReader (void);

    

    virtual ~flightAuthorizationRequestDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader (const flightAuthorizationRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader (flightAuthorizationRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader &operator= (const flightAuthorizationRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader &operator= (flightAuthorizationRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::weatherInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> weatherInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_WEATHERINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_WEATHERINFOTYPESUPPORT__VAR_OUT_CH_

  class weatherInfoTypeSupport;
  typedef weatherInfoTypeSupport *weatherInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<weatherInfoTypeSupport> weatherInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<weatherInfoTypeSupport> weatherInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export weatherInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef weatherInfoTypeSupport_ptr _ptr_type;
    typedef weatherInfoTypeSupport_var _var_type;
    typedef weatherInfoTypeSupport_out _out_type;

    // The static operations.
    static weatherInfoTypeSupport_ptr _duplicate (weatherInfoTypeSupport_ptr obj);

    static void _tao_release (weatherInfoTypeSupport_ptr obj);

    static weatherInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static weatherInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static weatherInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::weatherInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::weatherInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::weatherInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::weatherInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::weatherInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::weatherInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::weatherInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::weatherInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    weatherInfoTypeSupport (void);

    

    virtual ~weatherInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport (const weatherInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport (weatherInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport &operator= (const weatherInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoTypeSupport &operator= (weatherInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_WEATHERINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_WEATHERINFODATAWRITER__VAR_OUT_CH_

  class weatherInfoDataWriter;
  typedef weatherInfoDataWriter *weatherInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<weatherInfoDataWriter> weatherInfoDataWriter_var;
  typedef TAO_Objref_Out_T<weatherInfoDataWriter> weatherInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export weatherInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef weatherInfoDataWriter_ptr _ptr_type;
    typedef weatherInfoDataWriter_var _var_type;
    typedef weatherInfoDataWriter_out _out_type;

    // The static operations.
    static weatherInfoDataWriter_ptr _duplicate (weatherInfoDataWriter_ptr obj);

    static void _tao_release (weatherInfoDataWriter_ptr obj);

    static weatherInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::weatherInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::weatherInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::weatherInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::weatherInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::weatherInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::weatherInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::weatherInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    weatherInfoDataWriter (void);

    

    virtual ~weatherInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter (const weatherInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter (weatherInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter &operator= (const weatherInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataWriter &operator= (weatherInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_WEATHERINFODATAREADER__VAR_OUT_CH_)
#define _UATM_WEATHERINFODATAREADER__VAR_OUT_CH_

  class weatherInfoDataReader;
  typedef weatherInfoDataReader *weatherInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<weatherInfoDataReader> weatherInfoDataReader_var;
  typedef TAO_Objref_Out_T<weatherInfoDataReader> weatherInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export weatherInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef weatherInfoDataReader_ptr _ptr_type;
    typedef weatherInfoDataReader_var _var_type;
    typedef weatherInfoDataReader_out _out_type;

    // The static operations.
    static weatherInfoDataReader_ptr _duplicate (weatherInfoDataReader_ptr obj);

    static void _tao_release (weatherInfoDataReader_ptr obj);

    static weatherInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static weatherInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::weatherInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::weatherInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::weatherInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::weatherInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::weatherInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::weatherInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    weatherInfoDataReader (void);

    

    virtual ~weatherInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader (const weatherInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader (weatherInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader &operator= (const weatherInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (weatherInfoDataReader &operator= (weatherInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightAssign, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightAssignSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTASSIGNTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTASSIGNTYPESUPPORT__VAR_OUT_CH_

  class flightAssignTypeSupport;
  typedef flightAssignTypeSupport *flightAssignTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightAssignTypeSupport> flightAssignTypeSupport_var;
  typedef TAO_Objref_Out_T<flightAssignTypeSupport> flightAssignTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAssignTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAssignTypeSupport_ptr _ptr_type;
    typedef flightAssignTypeSupport_var _var_type;
    typedef flightAssignTypeSupport_out _out_type;

    // The static operations.
    static flightAssignTypeSupport_ptr _duplicate (flightAssignTypeSupport_ptr obj);

    static void _tao_release (flightAssignTypeSupport_ptr obj);

    static flightAssignTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAssignTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAssignTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightAssign & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightAssign * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightAssign & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightAssign & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightAssign & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightAssign & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightAssign_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightAssign_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAssignTypeSupport (void);

    

    virtual ~flightAssignTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAssignTypeSupport (const flightAssignTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAssignTypeSupport (flightAssignTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAssignTypeSupport &operator= (const flightAssignTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAssignTypeSupport &operator= (flightAssignTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTASSIGNDATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTASSIGNDATAWRITER__VAR_OUT_CH_

  class flightAssignDataWriter;
  typedef flightAssignDataWriter *flightAssignDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightAssignDataWriter> flightAssignDataWriter_var;
  typedef TAO_Objref_Out_T<flightAssignDataWriter> flightAssignDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAssignDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAssignDataWriter_ptr _ptr_type;
    typedef flightAssignDataWriter_var _var_type;
    typedef flightAssignDataWriter_out _out_type;

    // The static operations.
    static flightAssignDataWriter_ptr _duplicate (flightAssignDataWriter_ptr obj);

    static void _tao_release (flightAssignDataWriter_ptr obj);

    static flightAssignDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAssignDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAssignDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightAssign & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightAssign & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightAssign & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightAssign & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightAssign & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightAssign & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightAssign & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightAssign & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAssign & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAssign & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAssignDataWriter (void);

    

    virtual ~flightAssignDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataWriter (const flightAssignDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataWriter (flightAssignDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataWriter &operator= (const flightAssignDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataWriter &operator= (flightAssignDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTASSIGNDATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTASSIGNDATAREADER__VAR_OUT_CH_

  class flightAssignDataReader;
  typedef flightAssignDataReader *flightAssignDataReader_ptr;
  typedef TAO_Objref_Var_T<flightAssignDataReader> flightAssignDataReader_var;
  typedef TAO_Objref_Out_T<flightAssignDataReader> flightAssignDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAssignDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAssignDataReader_ptr _ptr_type;
    typedef flightAssignDataReader_var _var_type;
    typedef flightAssignDataReader_out _out_type;

    // The static operations.
    static flightAssignDataReader_ptr _duplicate (flightAssignDataReader_ptr obj);

    static void _tao_release (flightAssignDataReader_ptr obj);

    static flightAssignDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAssignDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAssignDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightAssignSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightAssignSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightAssign & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightAssign & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightAssignSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightAssignSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightAssignSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAssign & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAssign & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAssignDataReader (void);

    

    virtual ~flightAssignDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataReader (const flightAssignDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataReader (flightAssignDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataReader &operator= (const flightAssignDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAssignDataReader &operator= (flightAssignDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_UATM_ACCEPTABLEROUTETYPESUPPORT__TRAITS_)
#define _UATM_ACCEPTABLEROUTETYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::acceptableRouteTypeSupport>
  {
    static ::UATM::acceptableRouteTypeSupport_ptr duplicate (
        ::UATM::acceptableRouteTypeSupport_ptr p);
    static void release (
        ::UATM::acceptableRouteTypeSupport_ptr p);
    static ::UATM::acceptableRouteTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::acceptableRouteTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_ACCEPTABLEROUTEDATAWRITER__TRAITS_)
#define _UATM_ACCEPTABLEROUTEDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::acceptableRouteDataWriter>
  {
    static ::UATM::acceptableRouteDataWriter_ptr duplicate (
        ::UATM::acceptableRouteDataWriter_ptr p);
    static void release (
        ::UATM::acceptableRouteDataWriter_ptr p);
    static ::UATM::acceptableRouteDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::acceptableRouteDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_ACCEPTABLEROUTEDATAREADER__TRAITS_)
#define _UATM_ACCEPTABLEROUTEDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::acceptableRouteDataReader>
  {
    static ::UATM::acceptableRouteDataReader_ptr duplicate (
        ::UATM::acceptableRouteDataReader_ptr p);
    static void release (
        ::UATM::acceptableRouteDataReader_ptr p);
    static ::UATM::acceptableRouteDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::acceptableRouteDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AIRSPACERESTRICTIONSTYPESUPPORT__TRAITS_)
#define _UATM_AIRSPACERESTRICTIONSTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::airspaceRestrictionsTypeSupport>
  {
    static ::UATM::airspaceRestrictionsTypeSupport_ptr duplicate (
        ::UATM::airspaceRestrictionsTypeSupport_ptr p);
    static void release (
        ::UATM::airspaceRestrictionsTypeSupport_ptr p);
    static ::UATM::airspaceRestrictionsTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::airspaceRestrictionsTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAWRITER__TRAITS_)
#define _UATM_AIRSPACERESTRICTIONSDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::airspaceRestrictionsDataWriter>
  {
    static ::UATM::airspaceRestrictionsDataWriter_ptr duplicate (
        ::UATM::airspaceRestrictionsDataWriter_ptr p);
    static void release (
        ::UATM::airspaceRestrictionsDataWriter_ptr p);
    static ::UATM::airspaceRestrictionsDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::airspaceRestrictionsDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AIRSPACERESTRICTIONSDATAREADER__TRAITS_)
#define _UATM_AIRSPACERESTRICTIONSDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::airspaceRestrictionsDataReader>
  {
    static ::UATM::airspaceRestrictionsDataReader_ptr duplicate (
        ::UATM::airspaceRestrictionsDataReader_ptr p);
    static void release (
        ::UATM::airspaceRestrictionsDataReader_ptr p);
    static ::UATM::airspaceRestrictionsDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::airspaceRestrictionsDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AVAILABILITYINFOTYPESUPPORT__TRAITS_)
#define _UATM_AVAILABILITYINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::availabilityInfoTypeSupport>
  {
    static ::UATM::availabilityInfoTypeSupport_ptr duplicate (
        ::UATM::availabilityInfoTypeSupport_ptr p);
    static void release (
        ::UATM::availabilityInfoTypeSupport_ptr p);
    static ::UATM::availabilityInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::availabilityInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AVAILABILITYINFODATAWRITER__TRAITS_)
#define _UATM_AVAILABILITYINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::availabilityInfoDataWriter>
  {
    static ::UATM::availabilityInfoDataWriter_ptr duplicate (
        ::UATM::availabilityInfoDataWriter_ptr p);
    static void release (
        ::UATM::availabilityInfoDataWriter_ptr p);
    static ::UATM::availabilityInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::availabilityInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_AVAILABILITYINFODATAREADER__TRAITS_)
#define _UATM_AVAILABILITYINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::availabilityInfoDataReader>
  {
    static ::UATM::availabilityInfoDataReader_ptr duplicate (
        ::UATM::availabilityInfoDataReader_ptr p);
    static void release (
        ::UATM::availabilityInfoDataReader_ptr p);
    static ::UATM::availabilityInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::availabilityInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_BOOKINGFLIGHTREQUESTTYPESUPPORT__TRAITS_)
#define _UATM_BOOKINGFLIGHTREQUESTTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::bookingFlightRequestTypeSupport>
  {
    static ::UATM::bookingFlightRequestTypeSupport_ptr duplicate (
        ::UATM::bookingFlightRequestTypeSupport_ptr p);
    static void release (
        ::UATM::bookingFlightRequestTypeSupport_ptr p);
    static ::UATM::bookingFlightRequestTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::bookingFlightRequestTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_BOOKINGFLIGHTREQUESTDATAWRITER__TRAITS_)
#define _UATM_BOOKINGFLIGHTREQUESTDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::bookingFlightRequestDataWriter>
  {
    static ::UATM::bookingFlightRequestDataWriter_ptr duplicate (
        ::UATM::bookingFlightRequestDataWriter_ptr p);
    static void release (
        ::UATM::bookingFlightRequestDataWriter_ptr p);
    static ::UATM::bookingFlightRequestDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::bookingFlightRequestDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_BOOKINGFLIGHTREQUESTDATAREADER__TRAITS_)
#define _UATM_BOOKINGFLIGHTREQUESTDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::bookingFlightRequestDataReader>
  {
    static ::UATM::bookingFlightRequestDataReader_ptr duplicate (
        ::UATM::bookingFlightRequestDataReader_ptr p);
    static void release (
        ::UATM::bookingFlightRequestDataReader_ptr p);
    static ::UATM::bookingFlightRequestDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::bookingFlightRequestDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationTypeSupport>
  {
    static ::UATM::flightAuthorizationTypeSupport_ptr duplicate (
        ::UATM::flightAuthorizationTypeSupport_ptr p);
    static void release (
        ::UATM::flightAuthorizationTypeSupport_ptr p);
    static ::UATM::flightAuthorizationTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONDATAWRITER__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationDataWriter>
  {
    static ::UATM::flightAuthorizationDataWriter_ptr duplicate (
        ::UATM::flightAuthorizationDataWriter_ptr p);
    static void release (
        ::UATM::flightAuthorizationDataWriter_ptr p);
    static ::UATM::flightAuthorizationDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONDATAREADER__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationDataReader>
  {
    static ::UATM::flightAuthorizationDataReader_ptr duplicate (
        ::UATM::flightAuthorizationDataReader_ptr p);
    static void release (
        ::UATM::flightAuthorizationDataReader_ptr p);
    static ::UATM::flightAuthorizationDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCHANCERECTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTCHANCERECTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightChanceRecTypeSupport>
  {
    static ::UATM::flightChanceRecTypeSupport_ptr duplicate (
        ::UATM::flightChanceRecTypeSupport_ptr p);
    static void release (
        ::UATM::flightChanceRecTypeSupport_ptr p);
    static ::UATM::flightChanceRecTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightChanceRecTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCHANCERECDATAWRITER__TRAITS_)
#define _UATM_FLIGHTCHANCERECDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightChanceRecDataWriter>
  {
    static ::UATM::flightChanceRecDataWriter_ptr duplicate (
        ::UATM::flightChanceRecDataWriter_ptr p);
    static void release (
        ::UATM::flightChanceRecDataWriter_ptr p);
    static ::UATM::flightChanceRecDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightChanceRecDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCHANCERECDATAREADER__TRAITS_)
#define _UATM_FLIGHTCHANCERECDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightChanceRecDataReader>
  {
    static ::UATM::flightChanceRecDataReader_ptr duplicate (
        ::UATM::flightChanceRecDataReader_ptr p);
    static void release (
        ::UATM::flightChanceRecDataReader_ptr p);
    static ::UATM::flightChanceRecDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightChanceRecDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCOORDINATIONTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTCOORDINATIONTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightCoordinationTypeSupport>
  {
    static ::UATM::flightCoordinationTypeSupport_ptr duplicate (
        ::UATM::flightCoordinationTypeSupport_ptr p);
    static void release (
        ::UATM::flightCoordinationTypeSupport_ptr p);
    static ::UATM::flightCoordinationTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightCoordinationTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCOORDINATIONDATAWRITER__TRAITS_)
#define _UATM_FLIGHTCOORDINATIONDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightCoordinationDataWriter>
  {
    static ::UATM::flightCoordinationDataWriter_ptr duplicate (
        ::UATM::flightCoordinationDataWriter_ptr p);
    static void release (
        ::UATM::flightCoordinationDataWriter_ptr p);
    static ::UATM::flightCoordinationDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightCoordinationDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCOORDINATIONDATAREADER__TRAITS_)
#define _UATM_FLIGHTCOORDINATIONDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightCoordinationDataReader>
  {
    static ::UATM::flightCoordinationDataReader_ptr duplicate (
        ::UATM::flightCoordinationDataReader_ptr p);
    static void release (
        ::UATM::flightCoordinationDataReader_ptr p);
    static ::UATM::flightCoordinationDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightCoordinationDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTREQUESTINFOTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTREQUESTINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRequestInfoTypeSupport>
  {
    static ::UATM::flightRequestInfoTypeSupport_ptr duplicate (
        ::UATM::flightRequestInfoTypeSupport_ptr p);
    static void release (
        ::UATM::flightRequestInfoTypeSupport_ptr p);
    static ::UATM::flightRequestInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRequestInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTREQUESTINFODATAWRITER__TRAITS_)
#define _UATM_FLIGHTREQUESTINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRequestInfoDataWriter>
  {
    static ::UATM::flightRequestInfoDataWriter_ptr duplicate (
        ::UATM::flightRequestInfoDataWriter_ptr p);
    static void release (
        ::UATM::flightRequestInfoDataWriter_ptr p);
    static ::UATM::flightRequestInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRequestInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTREQUESTINFODATAREADER__TRAITS_)
#define _UATM_FLIGHTREQUESTINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRequestInfoDataReader>
  {
    static ::UATM::flightRequestInfoDataReader_ptr duplicate (
        ::UATM::flightRequestInfoDataReader_ptr p);
    static void release (
        ::UATM::flightRequestInfoDataReader_ptr p);
    static ::UATM::flightRequestInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRequestInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTROUTESINFOTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTROUTESINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRoutesInfoTypeSupport>
  {
    static ::UATM::flightRoutesInfoTypeSupport_ptr duplicate (
        ::UATM::flightRoutesInfoTypeSupport_ptr p);
    static void release (
        ::UATM::flightRoutesInfoTypeSupport_ptr p);
    static ::UATM::flightRoutesInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRoutesInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTROUTESINFODATAWRITER__TRAITS_)
#define _UATM_FLIGHTROUTESINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRoutesInfoDataWriter>
  {
    static ::UATM::flightRoutesInfoDataWriter_ptr duplicate (
        ::UATM::flightRoutesInfoDataWriter_ptr p);
    static void release (
        ::UATM::flightRoutesInfoDataWriter_ptr p);
    static ::UATM::flightRoutesInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRoutesInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTROUTESINFODATAREADER__TRAITS_)
#define _UATM_FLIGHTROUTESINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRoutesInfoDataReader>
  {
    static ::UATM::flightRoutesInfoDataReader_ptr duplicate (
        ::UATM::flightRoutesInfoDataReader_ptr p);
    static void release (
        ::UATM::flightRoutesInfoDataReader_ptr p);
    static ::UATM::flightRoutesInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRoutesInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TOLPADREQUESTTYPESUPPORT__TRAITS_)
#define _UATM_TOLPADREQUESTTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::tolPadRequestTypeSupport>
  {
    static ::UATM::tolPadRequestTypeSupport_ptr duplicate (
        ::UATM::tolPadRequestTypeSupport_ptr p);
    static void release (
        ::UATM::tolPadRequestTypeSupport_ptr p);
    static ::UATM::tolPadRequestTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::tolPadRequestTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TOLPADREQUESTDATAWRITER__TRAITS_)
#define _UATM_TOLPADREQUESTDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::tolPadRequestDataWriter>
  {
    static ::UATM::tolPadRequestDataWriter_ptr duplicate (
        ::UATM::tolPadRequestDataWriter_ptr p);
    static void release (
        ::UATM::tolPadRequestDataWriter_ptr p);
    static ::UATM::tolPadRequestDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::tolPadRequestDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TOLPADREQUESTDATAREADER__TRAITS_)
#define _UATM_TOLPADREQUESTDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::tolPadRequestDataReader>
  {
    static ::UATM::tolPadRequestDataReader_ptr duplicate (
        ::UATM::tolPadRequestDataReader_ptr p);
    static void release (
        ::UATM::tolPadRequestDataReader_ptr p);
    static ::UATM::tolPadRequestDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::tolPadRequestDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TRAFFICFLOWSINFOTYPESUPPORT__TRAITS_)
#define _UATM_TRAFFICFLOWSINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::trafficFlowsInfoTypeSupport>
  {
    static ::UATM::trafficFlowsInfoTypeSupport_ptr duplicate (
        ::UATM::trafficFlowsInfoTypeSupport_ptr p);
    static void release (
        ::UATM::trafficFlowsInfoTypeSupport_ptr p);
    static ::UATM::trafficFlowsInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::trafficFlowsInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TRAFFICFLOWSINFODATAWRITER__TRAITS_)
#define _UATM_TRAFFICFLOWSINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::trafficFlowsInfoDataWriter>
  {
    static ::UATM::trafficFlowsInfoDataWriter_ptr duplicate (
        ::UATM::trafficFlowsInfoDataWriter_ptr p);
    static void release (
        ::UATM::trafficFlowsInfoDataWriter_ptr p);
    static ::UATM::trafficFlowsInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::trafficFlowsInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_TRAFFICFLOWSINFODATAREADER__TRAITS_)
#define _UATM_TRAFFICFLOWSINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::trafficFlowsInfoDataReader>
  {
    static ::UATM::trafficFlowsInfoDataReader_ptr duplicate (
        ::UATM::trafficFlowsInfoDataReader_ptr p);
    static void release (
        ::UATM::trafficFlowsInfoDataReader_ptr p);
    static ::UATM::trafficFlowsInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::trafficFlowsInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationRequestTypeSupport>
  {
    static ::UATM::flightAuthorizationRequestTypeSupport_ptr duplicate (
        ::UATM::flightAuthorizationRequestTypeSupport_ptr p);
    static void release (
        ::UATM::flightAuthorizationRequestTypeSupport_ptr p);
    static ::UATM::flightAuthorizationRequestTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationRequestTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationRequestDataWriter>
  {
    static ::UATM::flightAuthorizationRequestDataWriter_ptr duplicate (
        ::UATM::flightAuthorizationRequestDataWriter_ptr p);
    static void release (
        ::UATM::flightAuthorizationRequestDataWriter_ptr p);
    static ::UATM::flightAuthorizationRequestDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationRequestDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationRequestDataReader>
  {
    static ::UATM::flightAuthorizationRequestDataReader_ptr duplicate (
        ::UATM::flightAuthorizationRequestDataReader_ptr p);
    static void release (
        ::UATM::flightAuthorizationRequestDataReader_ptr p);
    static ::UATM::flightAuthorizationRequestDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationRequestDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_WEATHERINFOTYPESUPPORT__TRAITS_)
#define _UATM_WEATHERINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::weatherInfoTypeSupport>
  {
    static ::UATM::weatherInfoTypeSupport_ptr duplicate (
        ::UATM::weatherInfoTypeSupport_ptr p);
    static void release (
        ::UATM::weatherInfoTypeSupport_ptr p);
    static ::UATM::weatherInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::weatherInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_WEATHERINFODATAWRITER__TRAITS_)
#define _UATM_WEATHERINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::weatherInfoDataWriter>
  {
    static ::UATM::weatherInfoDataWriter_ptr duplicate (
        ::UATM::weatherInfoDataWriter_ptr p);
    static void release (
        ::UATM::weatherInfoDataWriter_ptr p);
    static ::UATM::weatherInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::weatherInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_WEATHERINFODATAREADER__TRAITS_)
#define _UATM_WEATHERINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::weatherInfoDataReader>
  {
    static ::UATM::weatherInfoDataReader_ptr duplicate (
        ::UATM::weatherInfoDataReader_ptr p);
    static void release (
        ::UATM::weatherInfoDataReader_ptr p);
    static ::UATM::weatherInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::weatherInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTASSIGNTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTASSIGNTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAssignTypeSupport>
  {
    static ::UATM::flightAssignTypeSupport_ptr duplicate (
        ::UATM::flightAssignTypeSupport_ptr p);
    static void release (
        ::UATM::flightAssignTypeSupport_ptr p);
    static ::UATM::flightAssignTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAssignTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTASSIGNDATAWRITER__TRAITS_)
#define _UATM_FLIGHTASSIGNDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAssignDataWriter>
  {
    static ::UATM::flightAssignDataWriter_ptr duplicate (
        ::UATM::flightAssignDataWriter_ptr p);
    static void release (
        ::UATM::flightAssignDataWriter_ptr p);
    static ::UATM::flightAssignDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAssignDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTASSIGNDATAREADER__TRAITS_)
#define _UATM_FLIGHTASSIGNDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAssignDataReader>
  {
    static ::UATM::flightAssignDataReader_ptr duplicate (
        ::UATM::flightAssignDataReader_ptr p);
    static void release (
        ::UATM::flightAssignDataReader_ptr p);
    static ::UATM::flightAssignDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAssignDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:1649

#if defined (__ACE_INLINE__)
#include "UATMTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

