// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:372


#include "UATMC.h"
#include "tao/CDR.h"

#if !defined (__ACE_INLINE__)
#include "UATMC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_array\array_cs.cpp:93

UATM::ArrayString_slice *
UATM::ArrayString_dup (const UATM::ArrayString_slice *_tao_src_array)
{
  UATM::ArrayString_slice *_tao_dup_array =
    UATM::ArrayString_alloc ();
  
  if (!_tao_dup_array)
    {
      return static_cast <UATM::ArrayString_slice *> (0);
    }
  
  UATM::ArrayString_copy (_tao_dup_array, _tao_src_array);
  return _tao_dup_array;
}

UATM::ArrayString_slice *
UATM::ArrayString_alloc (void)
{
  UATM::ArrayString_slice *retval = 0;
  ACE_NEW_RETURN (retval, ::TAO::String_Manager[2], 0);
  return retval;
}

void
UATM::ArrayString_free (
    UATM::ArrayString_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
UATM::ArrayString_copy (
    UATM::ArrayString_slice * _tao_to,
    const UATM::ArrayString_slice *_tao_from)
{
  // Copy each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 2; ++i0)
    {
      _tao_to[i0] = _tao_from[i0];
    }
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::acceptableRoute &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.ac_route_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.origin.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.destination.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.estimated_time.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.approved_by.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.timestamp.in (), 20)) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.is_active));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::acceptableRoute &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.ac_route_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.origin.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.destination.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.estimated_time.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.approved_by.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.timestamp.out (), 20)) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.is_active));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::airspaceRestrictions &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.restriction_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.area.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.restriction_type.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.start_time.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.end_time.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.authority.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::airspaceRestrictions &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.restriction_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.area.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.restriction_type.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.start_time.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.end_time.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.authority.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::availabilityInfo &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.resource_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.resource_type.in (), 20)) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.status)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.location.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.availability_time.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::availabilityInfo &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.resource_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.resource_type.out (), 20)) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.status)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.location.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.availability_time.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::bookingFlightRequest &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.booking_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.customer_id.in (), 20)) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.departure_time.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.arrival_time.in (), 20)) &&
    (strm << _tao_aggregate.route_id) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.request_status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::bookingFlightRequest &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.booking_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.customer_id.out (), 20)) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.departure_time.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.arrival_time.out (), 20)) &&
    (strm >> _tao_aggregate.route_id) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.request_status));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::flightAuthorization &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.authorization_id) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << _tao_aggregate.approved_route_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.authority.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.authorization_time.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.valid_until.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::flightAuthorization &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.authorization_id) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> _tao_aggregate.approved_route_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.authority.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.authorization_time.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.valid_until.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_array\cdr_op_cs.cpp:162


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::ArrayString_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for ( ::CORBA::ULong i0 = 0; i0 < 2 && _tao_marshal_flag; ++i0)
    {
      _tao_marshal_flag = (strm << ACE_OutputCDR::from_string (_tao_array [i0].in (), 10));
    }

  return _tao_marshal_flag;
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::ArrayString_forany &_tao_array)
{
  CORBA::Boolean _tao_marshal_flag = true;
  
  for ( ::CORBA::ULong i0 = 0; i0 < 2 && _tao_marshal_flag; ++i0)
    {
      _tao_marshal_flag = (strm >> ACE_InputCDR::to_string (_tao_array [i0].out (), 10));
    }

  return _tao_marshal_flag;
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::flightChanceRec &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_recommended_by
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.recommended_by));
  return
    (strm << _tao_aggregate.recommendation_id) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.chance_type.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.reason.in (), 20)) &&
    (strm << _tao_aggregate_recommended_by) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.recommendation_time.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::flightChanceRec &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_recommended_by
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.recommended_by));
  return
    (strm >> _tao_aggregate.recommendation_id) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.chance_type.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.reason.out (), 20)) &&
    (strm >> _tao_aggregate_recommended_by) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.recommendation_time.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::flightCoordination &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_involved_parties
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.involved_parties));
  return
    (strm << _tao_aggregate.coordination_id) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << _tao_aggregate_involved_parties) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.coordination_details.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.recommendation_time.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::flightCoordination &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_involved_parties
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.involved_parties));
  return
    (strm >> _tao_aggregate.coordination_id) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> _tao_aggregate_involved_parties) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.coordination_details.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.recommendation_time.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::flightRequestInfo &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.request_id) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << _tao_aggregate.requestor_id) &&
    (strm << _tao_aggregate.requested_route_id) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.request_status)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.request_time.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::flightRequestInfo &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.request_id) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> _tao_aggregate.requestor_id) &&
    (strm >> _tao_aggregate.requested_route_id) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.request_status)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.request_time.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::flightRoutesInfo &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_waypoints
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.waypoints));
  return
    (strm << _tao_aggregate.flight_route_id) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << _tao_aggregate_waypoints) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.estimated_time.in (), 20)) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.status));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::flightRoutesInfo &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_waypoints
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.waypoints));
  return
    (strm >> _tao_aggregate.flight_route_id) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> _tao_aggregate_waypoints) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.estimated_time.out (), 20)) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.status));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::tolPadRequest &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.assign_id) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << _tao_aggregate.tol_pad_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.assign_time.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::tolPadRequest &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.assign_id) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> _tao_aggregate.tol_pad_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.assign_time.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::trafficFlowsInfo &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.flows_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.area.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.congestion_level.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.affected_routes.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.timestamp.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::trafficFlowsInfo &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.flows_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.area.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.congestion_level.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.affected_routes.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.timestamp.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::flightAuthorizationRequest &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.auth_request_id) &&
    (strm << _tao_aggregate.uasp_id) &&
    (strm << _tao_aggregate.flight_id) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.requested_status)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.request_time.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::flightAuthorizationRequest &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.auth_request_id) &&
    (strm >> _tao_aggregate.uasp_id) &&
    (strm >> _tao_aggregate.flight_id) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.requested_status)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.request_time.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::weatherInfo &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.weather_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.location.in (), 20)) &&
    (strm << _tao_aggregate.temperature) &&
    (strm << _tao_aggregate.wind_speed) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.weather_condition.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.observation_time.in (), 20));
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::weatherInfo &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.weather_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.location.out (), 20)) &&
    (strm >> _tao_aggregate.temperature) &&
    (strm >> _tao_aggregate.wind_speed) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.weather_condition.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.observation_time.out (), 20));
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const UATM::flightAssign &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_resources_id
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.resources_id));
  return
    (strm << _tao_aggregate.flight_assign_id) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.assign_time.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.operator_id.in (), 20)) &&
    (strm << ACE_OutputCDR::from_string (_tao_aggregate.assign_status.in (), 20)) &&
    (strm << _tao_aggregate_resources_id);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    UATM::flightAssign &_tao_aggregate)
{
  UATM::ArrayString_forany _tao_aggregate_resources_id
    (const_cast<UATM::ArrayString_slice*> (
      _tao_aggregate.resources_id));
  return
    (strm >> _tao_aggregate.flight_assign_id) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.assign_time.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.operator_id.out (), 20)) &&
    (strm >> ACE_InputCDR::to_string (_tao_aggregate.assign_status.out (), 20)) &&
    (strm >> _tao_aggregate_resources_id);
}

TAO_END_VERSIONED_NAMESPACE_DECL



