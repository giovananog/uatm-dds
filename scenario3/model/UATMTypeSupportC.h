// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:148

#ifndef _TAO_IDL_UATMTYPESUPPORTC_XKLUZF_H_
#define _TAO_IDL_UATMTYPESUPPORTC_XKLUZF_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "UATM_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "UATMC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"
#include "dds/DdsDynamicDataC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 21
#error This file should be regenerated with TAO_IDL
#endif
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightCoordination, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightCoordinationSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCOORDINATIONTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTCOORDINATIONTYPESUPPORT__VAR_OUT_CH_

  class flightCoordinationTypeSupport;
  typedef flightCoordinationTypeSupport *flightCoordinationTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightCoordinationTypeSupport> flightCoordinationTypeSupport_var;
  typedef TAO_Objref_Out_T<flightCoordinationTypeSupport> flightCoordinationTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightCoordinationTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightCoordinationTypeSupport_ptr _ptr_type;
    typedef flightCoordinationTypeSupport_var _var_type;
    typedef flightCoordinationTypeSupport_out _out_type;

    // The static operations.
    static flightCoordinationTypeSupport_ptr _duplicate (flightCoordinationTypeSupport_ptr obj);

    static void _tao_release (flightCoordinationTypeSupport_ptr obj);

    static flightCoordinationTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightCoordinationTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightCoordinationTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightCoordination & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightCoordination * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightCoordination & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightCoordination & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightCoordination & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightCoordination & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightCoordination_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightCoordination_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightCoordinationTypeSupport (void);

    

    virtual ~flightCoordinationTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport (const flightCoordinationTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport (flightCoordinationTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport &operator= (const flightCoordinationTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationTypeSupport &operator= (flightCoordinationTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCOORDINATIONDATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTCOORDINATIONDATAWRITER__VAR_OUT_CH_

  class flightCoordinationDataWriter;
  typedef flightCoordinationDataWriter *flightCoordinationDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightCoordinationDataWriter> flightCoordinationDataWriter_var;
  typedef TAO_Objref_Out_T<flightCoordinationDataWriter> flightCoordinationDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightCoordinationDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightCoordinationDataWriter_ptr _ptr_type;
    typedef flightCoordinationDataWriter_var _var_type;
    typedef flightCoordinationDataWriter_out _out_type;

    // The static operations.
    static flightCoordinationDataWriter_ptr _duplicate (flightCoordinationDataWriter_ptr obj);

    static void _tao_release (flightCoordinationDataWriter_ptr obj);

    static flightCoordinationDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightCoordination & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightCoordination & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightCoordination & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightCoordination & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightCoordination & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightCoordination & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightCoordination & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightCoordinationDataWriter (void);

    

    virtual ~flightCoordinationDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter (const flightCoordinationDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter (flightCoordinationDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter &operator= (const flightCoordinationDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataWriter &operator= (flightCoordinationDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTCOORDINATIONDATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTCOORDINATIONDATAREADER__VAR_OUT_CH_

  class flightCoordinationDataReader;
  typedef flightCoordinationDataReader *flightCoordinationDataReader_ptr;
  typedef TAO_Objref_Var_T<flightCoordinationDataReader> flightCoordinationDataReader_var;
  typedef TAO_Objref_Out_T<flightCoordinationDataReader> flightCoordinationDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightCoordinationDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightCoordinationDataReader_ptr _ptr_type;
    typedef flightCoordinationDataReader_var _var_type;
    typedef flightCoordinationDataReader_out _out_type;

    // The static operations.
    static flightCoordinationDataReader_ptr _duplicate (flightCoordinationDataReader_ptr obj);

    static void _tao_release (flightCoordinationDataReader_ptr obj);

    static flightCoordinationDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightCoordinationDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightCoordination & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightCoordination & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightCoordinationSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightCoordinationSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightCoordination & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightCoordination & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightCoordinationDataReader (void);

    

    virtual ~flightCoordinationDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader (const flightCoordinationDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader (flightCoordinationDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader &operator= (const flightCoordinationDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightCoordinationDataReader &operator= (flightCoordinationDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightAuthorizationRequest, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightAuthorizationRequestSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__VAR_OUT_CH_

  class flightAuthorizationRequestTypeSupport;
  typedef flightAuthorizationRequestTypeSupport *flightAuthorizationRequestTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationRequestTypeSupport> flightAuthorizationRequestTypeSupport_var;
  typedef TAO_Objref_Out_T<flightAuthorizationRequestTypeSupport> flightAuthorizationRequestTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationRequestTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationRequestTypeSupport_ptr _ptr_type;
    typedef flightAuthorizationRequestTypeSupport_var _var_type;
    typedef flightAuthorizationRequestTypeSupport_out _out_type;

    // The static operations.
    static flightAuthorizationRequestTypeSupport_ptr _duplicate (flightAuthorizationRequestTypeSupport_ptr obj);

    static void _tao_release (flightAuthorizationRequestTypeSupport_ptr obj);

    static flightAuthorizationRequestTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightAuthorizationRequest & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightAuthorizationRequest * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightAuthorizationRequest & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightAuthorizationRequest & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightAuthorizationRequest & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightAuthorizationRequest & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightAuthorizationRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightAuthorizationRequest_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationRequestTypeSupport (void);

    

    virtual ~flightAuthorizationRequestTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport (const flightAuthorizationRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport (flightAuthorizationRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport &operator= (const flightAuthorizationRequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestTypeSupport &operator= (flightAuthorizationRequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__VAR_OUT_CH_

  class flightAuthorizationRequestDataWriter;
  typedef flightAuthorizationRequestDataWriter *flightAuthorizationRequestDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationRequestDataWriter> flightAuthorizationRequestDataWriter_var;
  typedef TAO_Objref_Out_T<flightAuthorizationRequestDataWriter> flightAuthorizationRequestDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationRequestDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationRequestDataWriter_ptr _ptr_type;
    typedef flightAuthorizationRequestDataWriter_var _var_type;
    typedef flightAuthorizationRequestDataWriter_out _out_type;

    // The static operations.
    static flightAuthorizationRequestDataWriter_ptr _duplicate (flightAuthorizationRequestDataWriter_ptr obj);

    static void _tao_release (flightAuthorizationRequestDataWriter_ptr obj);

    static flightAuthorizationRequestDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightAuthorizationRequest & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightAuthorizationRequest & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightAuthorizationRequest & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAuthorizationRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAuthorizationRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationRequestDataWriter (void);

    

    virtual ~flightAuthorizationRequestDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter (const flightAuthorizationRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter (flightAuthorizationRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter &operator= (const flightAuthorizationRequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataWriter &operator= (flightAuthorizationRequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__VAR_OUT_CH_

  class flightAuthorizationRequestDataReader;
  typedef flightAuthorizationRequestDataReader *flightAuthorizationRequestDataReader_ptr;
  typedef TAO_Objref_Var_T<flightAuthorizationRequestDataReader> flightAuthorizationRequestDataReader_var;
  typedef TAO_Objref_Out_T<flightAuthorizationRequestDataReader> flightAuthorizationRequestDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightAuthorizationRequestDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightAuthorizationRequestDataReader_ptr _ptr_type;
    typedef flightAuthorizationRequestDataReader_var _var_type;
    typedef flightAuthorizationRequestDataReader_out _out_type;

    // The static operations.
    static flightAuthorizationRequestDataReader_ptr _duplicate (flightAuthorizationRequestDataReader_ptr obj);

    static void _tao_release (flightAuthorizationRequestDataReader_ptr obj);

    static flightAuthorizationRequestDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightAuthorizationRequestDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightAuthorizationRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightAuthorizationRequest & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightAuthorizationRequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightAuthorizationRequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightAuthorizationRequest & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightAuthorizationRequest & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightAuthorizationRequestDataReader (void);

    

    virtual ~flightAuthorizationRequestDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader (const flightAuthorizationRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader (flightAuthorizationRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader &operator= (const flightAuthorizationRequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightAuthorizationRequestDataReader &operator= (flightAuthorizationRequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:34

namespace UATM
{

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_ch.cpp:98

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< UATM::flightRequestInfo, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> flightRequestInfoSeq;
  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTREQUESTINFOTYPESUPPORT__VAR_OUT_CH_)
#define _UATM_FLIGHTREQUESTINFOTYPESUPPORT__VAR_OUT_CH_

  class flightRequestInfoTypeSupport;
  typedef flightRequestInfoTypeSupport *flightRequestInfoTypeSupport_ptr;
  typedef TAO_Objref_Var_T<flightRequestInfoTypeSupport> flightRequestInfoTypeSupport_var;
  typedef TAO_Objref_Out_T<flightRequestInfoTypeSupport> flightRequestInfoTypeSupport_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRequestInfoTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRequestInfoTypeSupport_ptr _ptr_type;
    typedef flightRequestInfoTypeSupport_var _var_type;
    typedef flightRequestInfoTypeSupport_out _out_type;

    // The static operations.
    static flightRequestInfoTypeSupport_ptr _duplicate (flightRequestInfoTypeSupport_ptr obj);

    static void _tao_release (flightRequestInfoTypeSupport_ptr obj);

    static flightRequestInfoTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoTypeSupport_ptr _nil (void);

    virtual ::DDS::ReturnCode_t create_sample_rc (
      ::UATM::flightRequestInfo & dst,
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::UATM::flightRequestInfo * create_sample (
      ::DDS::DynamicData_ptr src) = 0;

    virtual ::DDS::ReturnCode_t create_dynamic_sample_rc (
      ::DDS::DynamicData_ptr & dst,
      const ::UATM::flightRequestInfo & src) = 0;

    virtual ::DDS::DynamicData_ptr create_dynamic_sample (
      const ::UATM::flightRequestInfo & src) = 0;

    virtual ::DDS::ReturnCode_t encode_to_string (
      const ::UATM::flightRequestInfo & sample,
      ::CORBA::String_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t encode_to_bytes (
      const ::UATM::flightRequestInfo & sample,
      ::DDS::OctetSeq_out encoded,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_string (
      const char * encoded,
      ::UATM::flightRequestInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    virtual ::DDS::ReturnCode_t decode_from_bytes (
      const ::DDS::OctetSeq & encoded,
      ::UATM::flightRequestInfo_out sample,
      ::OpenDDS::DCPS::RepresentationFormat_ptr format) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRequestInfoTypeSupport (void);

    

    virtual ~flightRequestInfoTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport (const flightRequestInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport (flightRequestInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport &operator= (const flightRequestInfoTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoTypeSupport &operator= (flightRequestInfoTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTREQUESTINFODATAWRITER__VAR_OUT_CH_)
#define _UATM_FLIGHTREQUESTINFODATAWRITER__VAR_OUT_CH_

  class flightRequestInfoDataWriter;
  typedef flightRequestInfoDataWriter *flightRequestInfoDataWriter_ptr;
  typedef TAO_Objref_Var_T<flightRequestInfoDataWriter> flightRequestInfoDataWriter_var;
  typedef TAO_Objref_Out_T<flightRequestInfoDataWriter> flightRequestInfoDataWriter_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRequestInfoDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRequestInfoDataWriter_ptr _ptr_type;
    typedef flightRequestInfoDataWriter_var _var_type;
    typedef flightRequestInfoDataWriter_out _out_type;

    // The static operations.
    static flightRequestInfoDataWriter_ptr _duplicate (flightRequestInfoDataWriter_ptr obj);

    static void _tao_release (flightRequestInfoDataWriter_ptr obj);

    static flightRequestInfoDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::UATM::flightRequestInfo & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::UATM::flightRequestInfo & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::UATM::flightRequestInfo & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::UATM::flightRequestInfo & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::UATM::flightRequestInfo & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightRequestInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightRequestInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRequestInfoDataWriter (void);

    

    virtual ~flightRequestInfoDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter (const flightRequestInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter (flightRequestInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter &operator= (const flightRequestInfoDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataWriter &operator= (flightRequestInfoDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_interface.cpp:747

  

#if !defined (_UATM_FLIGHTREQUESTINFODATAREADER__VAR_OUT_CH_)
#define _UATM_FLIGHTREQUESTINFODATAREADER__VAR_OUT_CH_

  class flightRequestInfoDataReader;
  typedef flightRequestInfoDataReader *flightRequestInfoDataReader_ptr;
  typedef TAO_Objref_Var_T<flightRequestInfoDataReader> flightRequestInfoDataReader_var;
  typedef TAO_Objref_Out_T<flightRequestInfoDataReader> flightRequestInfoDataReader_out;
  

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:39

  

  class UATM_Export flightRequestInfoDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_type.cpp:302

    typedef flightRequestInfoDataReader_ptr _ptr_type;
    typedef flightRequestInfoDataReader_var _var_type;
    typedef flightRequestInfoDataReader_out _out_type;

    // The static operations.
    static flightRequestInfoDataReader_ptr _duplicate (flightRequestInfoDataReader_ptr obj);

    static void _tao_release (flightRequestInfoDataReader_ptr obj);

    static flightRequestInfoDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static flightRequestInfoDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::UATM::flightRequestInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::UATM::flightRequestInfo & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::UATM::flightRequestInfoSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::UATM::flightRequestInfoSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::UATM::flightRequestInfo & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::UATM::flightRequestInfo & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_ch.cpp:135

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    flightRequestInfoDataReader (void);

    

    virtual ~flightRequestInfoDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader (const flightRequestInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader (flightRequestInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader &operator= (const flightRequestInfoDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (flightRequestInfoDataReader &operator= (flightRequestInfoDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_module\module_ch.cpp:62


} // module UATM
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_arg_traits.cpp:64



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_traits.cpp:58



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_UATM_FLIGHTCOORDINATIONTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTCOORDINATIONTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightCoordinationTypeSupport>
  {
    static ::UATM::flightCoordinationTypeSupport_ptr duplicate (
        ::UATM::flightCoordinationTypeSupport_ptr p);
    static void release (
        ::UATM::flightCoordinationTypeSupport_ptr p);
    static ::UATM::flightCoordinationTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightCoordinationTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCOORDINATIONDATAWRITER__TRAITS_)
#define _UATM_FLIGHTCOORDINATIONDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightCoordinationDataWriter>
  {
    static ::UATM::flightCoordinationDataWriter_ptr duplicate (
        ::UATM::flightCoordinationDataWriter_ptr p);
    static void release (
        ::UATM::flightCoordinationDataWriter_ptr p);
    static ::UATM::flightCoordinationDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightCoordinationDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTCOORDINATIONDATAREADER__TRAITS_)
#define _UATM_FLIGHTCOORDINATIONDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightCoordinationDataReader>
  {
    static ::UATM::flightCoordinationDataReader_ptr duplicate (
        ::UATM::flightCoordinationDataReader_ptr p);
    static void release (
        ::UATM::flightCoordinationDataReader_ptr p);
    static ::UATM::flightCoordinationDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightCoordinationDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationRequestTypeSupport>
  {
    static ::UATM::flightAuthorizationRequestTypeSupport_ptr duplicate (
        ::UATM::flightAuthorizationRequestTypeSupport_ptr p);
    static void release (
        ::UATM::flightAuthorizationRequestTypeSupport_ptr p);
    static ::UATM::flightAuthorizationRequestTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationRequestTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationRequestDataWriter>
  {
    static ::UATM::flightAuthorizationRequestDataWriter_ptr duplicate (
        ::UATM::flightAuthorizationRequestDataWriter_ptr p);
    static void release (
        ::UATM::flightAuthorizationRequestDataWriter_ptr p);
    static ::UATM::flightAuthorizationRequestDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationRequestDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__TRAITS_)
#define _UATM_FLIGHTAUTHORIZATIONREQUESTDATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightAuthorizationRequestDataReader>
  {
    static ::UATM::flightAuthorizationRequestDataReader_ptr duplicate (
        ::UATM::flightAuthorizationRequestDataReader_ptr p);
    static void release (
        ::UATM::flightAuthorizationRequestDataReader_ptr p);
    static ::UATM::flightAuthorizationRequestDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightAuthorizationRequestDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTREQUESTINFOTYPESUPPORT__TRAITS_)
#define _UATM_FLIGHTREQUESTINFOTYPESUPPORT__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRequestInfoTypeSupport>
  {
    static ::UATM::flightRequestInfoTypeSupport_ptr duplicate (
        ::UATM::flightRequestInfoTypeSupport_ptr p);
    static void release (
        ::UATM::flightRequestInfoTypeSupport_ptr p);
    static ::UATM::flightRequestInfoTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRequestInfoTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTREQUESTINFODATAWRITER__TRAITS_)
#define _UATM_FLIGHTREQUESTINFODATAWRITER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRequestInfoDataWriter>
  {
    static ::UATM::flightRequestInfoDataWriter_ptr duplicate (
        ::UATM::flightRequestInfoDataWriter_ptr p);
    static void release (
        ::UATM::flightRequestInfoDataWriter_ptr p);
    static ::UATM::flightRequestInfoDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRequestInfoDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_UATM_FLIGHTREQUESTINFODATAREADER__TRAITS_)
#define _UATM_FLIGHTREQUESTINFODATAREADER__TRAITS_

  template<>
  struct UATM_Export Objref_Traits< ::UATM::flightRequestInfoDataReader>
  {
    static ::UATM::flightRequestInfoDataReader_ptr duplicate (
        ::UATM::flightRequestInfoDataReader_ptr p);
    static void release (
        ::UATM::flightRequestInfoDataReader_ptr p);
    static ::UATM::flightRequestInfoDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::UATM::flightRequestInfoDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:1649

#if defined (__ACE_INLINE__)
#include "UATMTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

