/* Generated by C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\bin\opendds_idl version 3.29.1 (ACE version 6.5.21) running on input file UATM.idl */
#ifndef OPENDDS_IDL_GENERATED_UATMTYPESUPPORT_IDL_5DE13W
#define OPENDDS_IDL_GENERATED_UATMTYPESUPPORT_IDL_5DE13W
#define __OPENDDS_IDL_HAS_FIXED
#include "UATM.idl"

#include "dds/DdsDcpsInfrastructure.idl"
#include "dds/DdsDcpsPublication.idl"
#include "dds/DdsDcpsSubscriptionExt.idl"
#include "dds/DdsDcpsTopic.idl"
#include "dds/DdsDcpsTypeSupportExt.idl"
#include "dds/DdsDynamicData.idl"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: UATM */



/* Begin STRUCT-FWD: flightCoordination */


/* End STRUCT-FWD: flightCoordination */


/* Begin STRUCT-FWD: flightAuthorizationRequest */


/* End STRUCT-FWD: flightAuthorizationRequest */


/* Begin STRUCT-FWD: flightRequestInfo */


/* End STRUCT-FWD: flightRequestInfo */

/* End MODULE: UATM */


/* Begin MODULE: UATM */



/* Begin TYPEDEF: ArrayString */


/* End TYPEDEF: ArrayString */

/* End MODULE: UATM */


/* Begin MODULE: UATM */



/* Begin STRUCT: flightCoordination */

module UATM {
#pragma DCPS_SUPPORT_ZERO_COPY_READ
#pragma DCPS_GEN_ZERO_COPY_READ
#pragma DCPS_DATA_SEQUENCE_TYPE "UATM::flightCoordinationSeq"
typedef sequence< ::UATM::flightCoordination> flightCoordinationSeq;

/** Support topic registration for flightCoordination data type.
 *
 * See the DDS specification, OMG formal/2015-04-10, for a description of
 * this interface.
 */
local interface flightCoordinationTypeSupport : OpenDDS::DCPS::TypeSupport {
#ifndef OPENDDS_SAFETY_PROFILE
    // TODO: valuetype isn't supported in Java.
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::ReturnCode_t create_sample_rc(inout  ::UATM::flightCoordination dst, in ::DDS::DynamicData src);
    @OpenDDS::internal::hidden_op_in_java(0)
     ::UATM::flightCoordination create_sample(in ::DDS::DynamicData src);
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::ReturnCode_t create_dynamic_sample_rc(inout ::DDS::DynamicData dst, in  ::UATM::flightCoordination src);
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::DynamicData create_dynamic_sample(in  ::UATM::flightCoordination src);
#endif

    ::DDS::ReturnCode_t encode_to_string(in  ::UATM::flightCoordination sample, out string encoded, in OpenDDS::DCPS::RepresentationFormat format);
    ::DDS::ReturnCode_t encode_to_bytes(in  ::UATM::flightCoordination sample, out ::DDS::OctetSeq encoded, in OpenDDS::DCPS::RepresentationFormat format);

    ::DDS::ReturnCode_t decode_from_string(in string encoded, out  ::UATM::flightCoordination sample, in OpenDDS::DCPS::RepresentationFormat format);
    ::DDS::ReturnCode_t decode_from_bytes(in ::DDS::OctetSeq encoded, out  ::UATM::flightCoordination sample, in OpenDDS::DCPS::RepresentationFormat format);
};

/** DataWriter interface for flightCoordination data type.
 *
 * See the DDS specifications, OMG formal/2015-04-10 and formal/07-01-01,
 * for a description of this interface.
 */
local interface flightCoordinationDataWriter : ::DDS::DataWriter {
    ::DDS::InstanceHandle_t register_instance(
                in  ::UATM::flightCoordination instance);

    ::DDS::InstanceHandle_t register_instance_w_timestamp(
                in  ::UATM::flightCoordination instance,
                in ::DDS::Time_t timestamp);

    ::DDS::ReturnCode_t unregister_instance(
                in  ::UATM::flightCoordination instance,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::ReturnCode_t unregister_instance_w_timestamp(
                in  ::UATM::flightCoordination instance,
                in ::DDS::InstanceHandle_t handle,
                in ::DDS::Time_t timestamp);

    //WARNING: If the handle is non-nil and the instance is not registered
    //         then this operation may cause an access violation.
    //         This lack of safety helps performance.
    ::DDS::ReturnCode_t write(
                in  ::UATM::flightCoordination instance_data,
                in ::DDS::InstanceHandle_t handle);

    //WARNING: If the handle is non-nil and the instance is not registered
    //         then this operation may cause an access violation.
    //         This lack of safety helps performance.
    ::DDS::ReturnCode_t write_w_timestamp(
                in  ::UATM::flightCoordination instance_data,
                in ::DDS::InstanceHandle_t handle,
                in ::DDS::Time_t source_timestamp);

    ::DDS::ReturnCode_t dispose(
                in  ::UATM::flightCoordination instance_data,
                in ::DDS::InstanceHandle_t instance_handle);

    ::DDS::ReturnCode_t dispose_w_timestamp(
                in  ::UATM::flightCoordination instance_data,
                in ::DDS::InstanceHandle_t instance_handle,
                in ::DDS::Time_t source_timestamp);

    ::DDS::ReturnCode_t get_key_value(
                inout  ::UATM::flightCoordination key_holder,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::InstanceHandle_t lookup_instance(
                in  ::UATM::flightCoordination instance_data);
};

/** DataReader interface for flightCoordination data type.
 *
 * See the DDS specification, OMG formal/2015-04-10, for a description of
 * this interface.
 */
local interface flightCoordinationDataReader : OpenDDS::DCPS::DataReaderEx {
    ::DDS::ReturnCode_t read(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_w_condition(
                inout flightCoordinationSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_w_condition(
                inout flightCoordinationSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t read_next_sample(
                inout  ::UATM::flightCoordination received_data,
                inout ::DDS::SampleInfo sample_info);

    ::DDS::ReturnCode_t take_next_sample(
                inout  ::UATM::flightCoordination received_data,
                inout ::DDS::SampleInfo sample_info);

    ::DDS::ReturnCode_t read_instance(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take_instance(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_instance_w_condition(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_instance_w_condition(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t read_next_instance(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take_next_instance(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_next_instance_w_condition(
                inout flightCoordinationSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t previous_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_next_instance_w_condition(
                inout flightCoordinationSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t previous_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t return_loan(
                inout flightCoordinationSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq);

    ::DDS::ReturnCode_t get_key_value(
                inout  ::UATM::flightCoordination key_holder,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::InstanceHandle_t lookup_instance(
                in  ::UATM::flightCoordination instance_data);
};
};

/* End STRUCT: flightCoordination */

/* End MODULE: UATM */


/* Begin MODULE: UATM */



/* Begin STRUCT: flightAuthorizationRequest */

module UATM {
#pragma DCPS_SUPPORT_ZERO_COPY_READ
#pragma DCPS_GEN_ZERO_COPY_READ
#pragma DCPS_DATA_SEQUENCE_TYPE "UATM::flightAuthorizationRequestSeq"
typedef sequence< ::UATM::flightAuthorizationRequest> flightAuthorizationRequestSeq;

/** Support topic registration for flightAuthorizationRequest data type.
 *
 * See the DDS specification, OMG formal/2015-04-10, for a description of
 * this interface.
 */
local interface flightAuthorizationRequestTypeSupport : OpenDDS::DCPS::TypeSupport {
#ifndef OPENDDS_SAFETY_PROFILE
    // TODO: valuetype isn't supported in Java.
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::ReturnCode_t create_sample_rc(inout  ::UATM::flightAuthorizationRequest dst, in ::DDS::DynamicData src);
    @OpenDDS::internal::hidden_op_in_java(0)
     ::UATM::flightAuthorizationRequest create_sample(in ::DDS::DynamicData src);
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::ReturnCode_t create_dynamic_sample_rc(inout ::DDS::DynamicData dst, in  ::UATM::flightAuthorizationRequest src);
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::DynamicData create_dynamic_sample(in  ::UATM::flightAuthorizationRequest src);
#endif

    ::DDS::ReturnCode_t encode_to_string(in  ::UATM::flightAuthorizationRequest sample, out string encoded, in OpenDDS::DCPS::RepresentationFormat format);
    ::DDS::ReturnCode_t encode_to_bytes(in  ::UATM::flightAuthorizationRequest sample, out ::DDS::OctetSeq encoded, in OpenDDS::DCPS::RepresentationFormat format);

    ::DDS::ReturnCode_t decode_from_string(in string encoded, out  ::UATM::flightAuthorizationRequest sample, in OpenDDS::DCPS::RepresentationFormat format);
    ::DDS::ReturnCode_t decode_from_bytes(in ::DDS::OctetSeq encoded, out  ::UATM::flightAuthorizationRequest sample, in OpenDDS::DCPS::RepresentationFormat format);
};

/** DataWriter interface for flightAuthorizationRequest data type.
 *
 * See the DDS specifications, OMG formal/2015-04-10 and formal/07-01-01,
 * for a description of this interface.
 */
local interface flightAuthorizationRequestDataWriter : ::DDS::DataWriter {
    ::DDS::InstanceHandle_t register_instance(
                in  ::UATM::flightAuthorizationRequest instance);

    ::DDS::InstanceHandle_t register_instance_w_timestamp(
                in  ::UATM::flightAuthorizationRequest instance,
                in ::DDS::Time_t timestamp);

    ::DDS::ReturnCode_t unregister_instance(
                in  ::UATM::flightAuthorizationRequest instance,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::ReturnCode_t unregister_instance_w_timestamp(
                in  ::UATM::flightAuthorizationRequest instance,
                in ::DDS::InstanceHandle_t handle,
                in ::DDS::Time_t timestamp);

    //WARNING: If the handle is non-nil and the instance is not registered
    //         then this operation may cause an access violation.
    //         This lack of safety helps performance.
    ::DDS::ReturnCode_t write(
                in  ::UATM::flightAuthorizationRequest instance_data,
                in ::DDS::InstanceHandle_t handle);

    //WARNING: If the handle is non-nil and the instance is not registered
    //         then this operation may cause an access violation.
    //         This lack of safety helps performance.
    ::DDS::ReturnCode_t write_w_timestamp(
                in  ::UATM::flightAuthorizationRequest instance_data,
                in ::DDS::InstanceHandle_t handle,
                in ::DDS::Time_t source_timestamp);

    ::DDS::ReturnCode_t dispose(
                in  ::UATM::flightAuthorizationRequest instance_data,
                in ::DDS::InstanceHandle_t instance_handle);

    ::DDS::ReturnCode_t dispose_w_timestamp(
                in  ::UATM::flightAuthorizationRequest instance_data,
                in ::DDS::InstanceHandle_t instance_handle,
                in ::DDS::Time_t source_timestamp);

    ::DDS::ReturnCode_t get_key_value(
                inout  ::UATM::flightAuthorizationRequest key_holder,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::InstanceHandle_t lookup_instance(
                in  ::UATM::flightAuthorizationRequest instance_data);
};

/** DataReader interface for flightAuthorizationRequest data type.
 *
 * See the DDS specification, OMG formal/2015-04-10, for a description of
 * this interface.
 */
local interface flightAuthorizationRequestDataReader : OpenDDS::DCPS::DataReaderEx {
    ::DDS::ReturnCode_t read(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_w_condition(
                inout flightAuthorizationRequestSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_w_condition(
                inout flightAuthorizationRequestSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t read_next_sample(
                inout  ::UATM::flightAuthorizationRequest received_data,
                inout ::DDS::SampleInfo sample_info);

    ::DDS::ReturnCode_t take_next_sample(
                inout  ::UATM::flightAuthorizationRequest received_data,
                inout ::DDS::SampleInfo sample_info);

    ::DDS::ReturnCode_t read_instance(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take_instance(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_instance_w_condition(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_instance_w_condition(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t read_next_instance(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take_next_instance(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_next_instance_w_condition(
                inout flightAuthorizationRequestSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t previous_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_next_instance_w_condition(
                inout flightAuthorizationRequestSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t previous_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t return_loan(
                inout flightAuthorizationRequestSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq);

    ::DDS::ReturnCode_t get_key_value(
                inout  ::UATM::flightAuthorizationRequest key_holder,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::InstanceHandle_t lookup_instance(
                in  ::UATM::flightAuthorizationRequest instance_data);
};
};

/* End STRUCT: flightAuthorizationRequest */

/* End MODULE: UATM */


/* Begin MODULE: UATM */



/* Begin STRUCT: flightRequestInfo */

module UATM {
#pragma DCPS_SUPPORT_ZERO_COPY_READ
#pragma DCPS_GEN_ZERO_COPY_READ
#pragma DCPS_DATA_SEQUENCE_TYPE "UATM::flightRequestInfoSeq"
typedef sequence< ::UATM::flightRequestInfo> flightRequestInfoSeq;

/** Support topic registration for flightRequestInfo data type.
 *
 * See the DDS specification, OMG formal/2015-04-10, for a description of
 * this interface.
 */
local interface flightRequestInfoTypeSupport : OpenDDS::DCPS::TypeSupport {
#ifndef OPENDDS_SAFETY_PROFILE
    // TODO: valuetype isn't supported in Java.
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::ReturnCode_t create_sample_rc(inout  ::UATM::flightRequestInfo dst, in ::DDS::DynamicData src);
    @OpenDDS::internal::hidden_op_in_java(0)
     ::UATM::flightRequestInfo create_sample(in ::DDS::DynamicData src);
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::ReturnCode_t create_dynamic_sample_rc(inout ::DDS::DynamicData dst, in  ::UATM::flightRequestInfo src);
    @OpenDDS::internal::hidden_op_in_java(0)
    ::DDS::DynamicData create_dynamic_sample(in  ::UATM::flightRequestInfo src);
#endif

    ::DDS::ReturnCode_t encode_to_string(in  ::UATM::flightRequestInfo sample, out string encoded, in OpenDDS::DCPS::RepresentationFormat format);
    ::DDS::ReturnCode_t encode_to_bytes(in  ::UATM::flightRequestInfo sample, out ::DDS::OctetSeq encoded, in OpenDDS::DCPS::RepresentationFormat format);

    ::DDS::ReturnCode_t decode_from_string(in string encoded, out  ::UATM::flightRequestInfo sample, in OpenDDS::DCPS::RepresentationFormat format);
    ::DDS::ReturnCode_t decode_from_bytes(in ::DDS::OctetSeq encoded, out  ::UATM::flightRequestInfo sample, in OpenDDS::DCPS::RepresentationFormat format);
};

/** DataWriter interface for flightRequestInfo data type.
 *
 * See the DDS specifications, OMG formal/2015-04-10 and formal/07-01-01,
 * for a description of this interface.
 */
local interface flightRequestInfoDataWriter : ::DDS::DataWriter {
    ::DDS::InstanceHandle_t register_instance(
                in  ::UATM::flightRequestInfo instance);

    ::DDS::InstanceHandle_t register_instance_w_timestamp(
                in  ::UATM::flightRequestInfo instance,
                in ::DDS::Time_t timestamp);

    ::DDS::ReturnCode_t unregister_instance(
                in  ::UATM::flightRequestInfo instance,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::ReturnCode_t unregister_instance_w_timestamp(
                in  ::UATM::flightRequestInfo instance,
                in ::DDS::InstanceHandle_t handle,
                in ::DDS::Time_t timestamp);

    //WARNING: If the handle is non-nil and the instance is not registered
    //         then this operation may cause an access violation.
    //         This lack of safety helps performance.
    ::DDS::ReturnCode_t write(
                in  ::UATM::flightRequestInfo instance_data,
                in ::DDS::InstanceHandle_t handle);

    //WARNING: If the handle is non-nil and the instance is not registered
    //         then this operation may cause an access violation.
    //         This lack of safety helps performance.
    ::DDS::ReturnCode_t write_w_timestamp(
                in  ::UATM::flightRequestInfo instance_data,
                in ::DDS::InstanceHandle_t handle,
                in ::DDS::Time_t source_timestamp);

    ::DDS::ReturnCode_t dispose(
                in  ::UATM::flightRequestInfo instance_data,
                in ::DDS::InstanceHandle_t instance_handle);

    ::DDS::ReturnCode_t dispose_w_timestamp(
                in  ::UATM::flightRequestInfo instance_data,
                in ::DDS::InstanceHandle_t instance_handle,
                in ::DDS::Time_t source_timestamp);

    ::DDS::ReturnCode_t get_key_value(
                inout  ::UATM::flightRequestInfo key_holder,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::InstanceHandle_t lookup_instance(
                in  ::UATM::flightRequestInfo instance_data);
};

/** DataReader interface for flightRequestInfo data type.
 *
 * See the DDS specification, OMG formal/2015-04-10, for a description of
 * this interface.
 */
local interface flightRequestInfoDataReader : OpenDDS::DCPS::DataReaderEx {
    ::DDS::ReturnCode_t read(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_w_condition(
                inout flightRequestInfoSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_w_condition(
                inout flightRequestInfoSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t read_next_sample(
                inout  ::UATM::flightRequestInfo received_data,
                inout ::DDS::SampleInfo sample_info);

    ::DDS::ReturnCode_t take_next_sample(
                inout  ::UATM::flightRequestInfo received_data,
                inout ::DDS::SampleInfo sample_info);

    ::DDS::ReturnCode_t read_instance(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take_instance(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_instance_w_condition(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_instance_w_condition(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t read_next_instance(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t take_next_instance(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq,
                in long max_samples,
                in ::DDS::InstanceHandle_t a_handle,
                in ::DDS::SampleStateMask sample_states,
                in ::DDS::ViewStateMask view_states,
                in ::DDS::InstanceStateMask instance_states);

    ::DDS::ReturnCode_t read_next_instance_w_condition(
                inout flightRequestInfoSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t previous_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t take_next_instance_w_condition(
                inout flightRequestInfoSeq data_values,
                inout ::DDS::SampleInfoSeq sample_infos,
                in long max_samples,
                in ::DDS::InstanceHandle_t previous_handle,
                in ::DDS::ReadCondition a_condition);

    ::DDS::ReturnCode_t return_loan(
                inout flightRequestInfoSeq received_data,
                inout ::DDS::SampleInfoSeq info_seq);

    ::DDS::ReturnCode_t get_key_value(
                inout  ::UATM::flightRequestInfo key_holder,
                in ::DDS::InstanceHandle_t handle);

    ::DDS::InstanceHandle_t lookup_instance(
                in  ::UATM::flightRequestInfo instance_data);
};
};

/* End STRUCT: flightRequestInfo */

/* End MODULE: UATM */
#endif /* OPENDDS_IDL_GENERATED_UATMTYPESUPPORT_IDL_5DE13W */
