// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.21
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:372


#include "UATMTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "UATMTypeSupportC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightCoordinationTypeSupport.

UATM::flightCoordinationTypeSupport_ptr
TAO::Objref_Traits<UATM::flightCoordinationTypeSupport>::duplicate (
    UATM::flightCoordinationTypeSupport_ptr p)
{
  return UATM::flightCoordinationTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightCoordinationTypeSupport>::release (
    UATM::flightCoordinationTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightCoordinationTypeSupport_ptr
TAO::Objref_Traits<UATM::flightCoordinationTypeSupport>::nil (void)
{
  return UATM::flightCoordinationTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightCoordinationTypeSupport>::marshal (
    const UATM::flightCoordinationTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightCoordinationTypeSupport::flightCoordinationTypeSupport (void)
{}

UATM::flightCoordinationTypeSupport::~flightCoordinationTypeSupport (void)
{
}

UATM::flightCoordinationTypeSupport_ptr
UATM::flightCoordinationTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightCoordinationTypeSupport::_duplicate (
      dynamic_cast<flightCoordinationTypeSupport_ptr> (_tao_objref));
}

UATM::flightCoordinationTypeSupport_ptr
UATM::flightCoordinationTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightCoordinationTypeSupport::_duplicate (
      dynamic_cast<flightCoordinationTypeSupport_ptr> (_tao_objref));
}

UATM::flightCoordinationTypeSupport_ptr
UATM::flightCoordinationTypeSupport::_nil (void)
{
  return 0;
}

UATM::flightCoordinationTypeSupport_ptr
UATM::flightCoordinationTypeSupport::_duplicate (flightCoordinationTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightCoordinationTypeSupport::_tao_release (flightCoordinationTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightCoordinationTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightCoordinationTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightCoordinationTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/flightCoordinationTypeSupport:1.0";
}

::CORBA::Boolean
UATM::flightCoordinationTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightCoordinationDataWriter.

UATM::flightCoordinationDataWriter_ptr
TAO::Objref_Traits<UATM::flightCoordinationDataWriter>::duplicate (
    UATM::flightCoordinationDataWriter_ptr p)
{
  return UATM::flightCoordinationDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightCoordinationDataWriter>::release (
    UATM::flightCoordinationDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightCoordinationDataWriter_ptr
TAO::Objref_Traits<UATM::flightCoordinationDataWriter>::nil (void)
{
  return UATM::flightCoordinationDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightCoordinationDataWriter>::marshal (
    const UATM::flightCoordinationDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightCoordinationDataWriter::flightCoordinationDataWriter (void)
{}

UATM::flightCoordinationDataWriter::~flightCoordinationDataWriter (void)
{
}

UATM::flightCoordinationDataWriter_ptr
UATM::flightCoordinationDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightCoordinationDataWriter::_duplicate (
      dynamic_cast<flightCoordinationDataWriter_ptr> (_tao_objref));
}

UATM::flightCoordinationDataWriter_ptr
UATM::flightCoordinationDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightCoordinationDataWriter::_duplicate (
      dynamic_cast<flightCoordinationDataWriter_ptr> (_tao_objref));
}

UATM::flightCoordinationDataWriter_ptr
UATM::flightCoordinationDataWriter::_nil (void)
{
  return 0;
}

UATM::flightCoordinationDataWriter_ptr
UATM::flightCoordinationDataWriter::_duplicate (flightCoordinationDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightCoordinationDataWriter::_tao_release (flightCoordinationDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightCoordinationDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightCoordinationDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightCoordinationDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/flightCoordinationDataWriter:1.0";
}

::CORBA::Boolean
UATM::flightCoordinationDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightCoordinationDataReader.

UATM::flightCoordinationDataReader_ptr
TAO::Objref_Traits<UATM::flightCoordinationDataReader>::duplicate (
    UATM::flightCoordinationDataReader_ptr p)
{
  return UATM::flightCoordinationDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightCoordinationDataReader>::release (
    UATM::flightCoordinationDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightCoordinationDataReader_ptr
TAO::Objref_Traits<UATM::flightCoordinationDataReader>::nil (void)
{
  return UATM::flightCoordinationDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightCoordinationDataReader>::marshal (
    const UATM::flightCoordinationDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightCoordinationDataReader::flightCoordinationDataReader (void)
{}

UATM::flightCoordinationDataReader::~flightCoordinationDataReader (void)
{
}

UATM::flightCoordinationDataReader_ptr
UATM::flightCoordinationDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightCoordinationDataReader::_duplicate (
      dynamic_cast<flightCoordinationDataReader_ptr> (_tao_objref));
}

UATM::flightCoordinationDataReader_ptr
UATM::flightCoordinationDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightCoordinationDataReader::_duplicate (
      dynamic_cast<flightCoordinationDataReader_ptr> (_tao_objref));
}

UATM::flightCoordinationDataReader_ptr
UATM::flightCoordinationDataReader::_nil (void)
{
  return 0;
}

UATM::flightCoordinationDataReader_ptr
UATM::flightCoordinationDataReader::_duplicate (flightCoordinationDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightCoordinationDataReader::_tao_release (flightCoordinationDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightCoordinationDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightCoordinationDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightCoordinationDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/flightCoordinationDataReader:1.0";
}

::CORBA::Boolean
UATM::flightCoordinationDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightAuthorizationRequestTypeSupport.

UATM::flightAuthorizationRequestTypeSupport_ptr
TAO::Objref_Traits<UATM::flightAuthorizationRequestTypeSupport>::duplicate (
    UATM::flightAuthorizationRequestTypeSupport_ptr p)
{
  return UATM::flightAuthorizationRequestTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightAuthorizationRequestTypeSupport>::release (
    UATM::flightAuthorizationRequestTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightAuthorizationRequestTypeSupport_ptr
TAO::Objref_Traits<UATM::flightAuthorizationRequestTypeSupport>::nil (void)
{
  return UATM::flightAuthorizationRequestTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightAuthorizationRequestTypeSupport>::marshal (
    const UATM::flightAuthorizationRequestTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightAuthorizationRequestTypeSupport::flightAuthorizationRequestTypeSupport (void)
{}

UATM::flightAuthorizationRequestTypeSupport::~flightAuthorizationRequestTypeSupport (void)
{
}

UATM::flightAuthorizationRequestTypeSupport_ptr
UATM::flightAuthorizationRequestTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationRequestTypeSupport::_duplicate (
      dynamic_cast<flightAuthorizationRequestTypeSupport_ptr> (_tao_objref));
}

UATM::flightAuthorizationRequestTypeSupport_ptr
UATM::flightAuthorizationRequestTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationRequestTypeSupport::_duplicate (
      dynamic_cast<flightAuthorizationRequestTypeSupport_ptr> (_tao_objref));
}

UATM::flightAuthorizationRequestTypeSupport_ptr
UATM::flightAuthorizationRequestTypeSupport::_nil (void)
{
  return 0;
}

UATM::flightAuthorizationRequestTypeSupport_ptr
UATM::flightAuthorizationRequestTypeSupport::_duplicate (flightAuthorizationRequestTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightAuthorizationRequestTypeSupport::_tao_release (flightAuthorizationRequestTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightAuthorizationRequestTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightAuthorizationRequestTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightAuthorizationRequestTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/flightAuthorizationRequestTypeSupport:1.0";
}

::CORBA::Boolean
UATM::flightAuthorizationRequestTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightAuthorizationRequestDataWriter.

UATM::flightAuthorizationRequestDataWriter_ptr
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataWriter>::duplicate (
    UATM::flightAuthorizationRequestDataWriter_ptr p)
{
  return UATM::flightAuthorizationRequestDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataWriter>::release (
    UATM::flightAuthorizationRequestDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightAuthorizationRequestDataWriter_ptr
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataWriter>::nil (void)
{
  return UATM::flightAuthorizationRequestDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataWriter>::marshal (
    const UATM::flightAuthorizationRequestDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightAuthorizationRequestDataWriter::flightAuthorizationRequestDataWriter (void)
{}

UATM::flightAuthorizationRequestDataWriter::~flightAuthorizationRequestDataWriter (void)
{
}

UATM::flightAuthorizationRequestDataWriter_ptr
UATM::flightAuthorizationRequestDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationRequestDataWriter::_duplicate (
      dynamic_cast<flightAuthorizationRequestDataWriter_ptr> (_tao_objref));
}

UATM::flightAuthorizationRequestDataWriter_ptr
UATM::flightAuthorizationRequestDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationRequestDataWriter::_duplicate (
      dynamic_cast<flightAuthorizationRequestDataWriter_ptr> (_tao_objref));
}

UATM::flightAuthorizationRequestDataWriter_ptr
UATM::flightAuthorizationRequestDataWriter::_nil (void)
{
  return 0;
}

UATM::flightAuthorizationRequestDataWriter_ptr
UATM::flightAuthorizationRequestDataWriter::_duplicate (flightAuthorizationRequestDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightAuthorizationRequestDataWriter::_tao_release (flightAuthorizationRequestDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightAuthorizationRequestDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightAuthorizationRequestDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightAuthorizationRequestDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/flightAuthorizationRequestDataWriter:1.0";
}

::CORBA::Boolean
UATM::flightAuthorizationRequestDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightAuthorizationRequestDataReader.

UATM::flightAuthorizationRequestDataReader_ptr
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataReader>::duplicate (
    UATM::flightAuthorizationRequestDataReader_ptr p)
{
  return UATM::flightAuthorizationRequestDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataReader>::release (
    UATM::flightAuthorizationRequestDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightAuthorizationRequestDataReader_ptr
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataReader>::nil (void)
{
  return UATM::flightAuthorizationRequestDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightAuthorizationRequestDataReader>::marshal (
    const UATM::flightAuthorizationRequestDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightAuthorizationRequestDataReader::flightAuthorizationRequestDataReader (void)
{}

UATM::flightAuthorizationRequestDataReader::~flightAuthorizationRequestDataReader (void)
{
}

UATM::flightAuthorizationRequestDataReader_ptr
UATM::flightAuthorizationRequestDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationRequestDataReader::_duplicate (
      dynamic_cast<flightAuthorizationRequestDataReader_ptr> (_tao_objref));
}

UATM::flightAuthorizationRequestDataReader_ptr
UATM::flightAuthorizationRequestDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightAuthorizationRequestDataReader::_duplicate (
      dynamic_cast<flightAuthorizationRequestDataReader_ptr> (_tao_objref));
}

UATM::flightAuthorizationRequestDataReader_ptr
UATM::flightAuthorizationRequestDataReader::_nil (void)
{
  return 0;
}

UATM::flightAuthorizationRequestDataReader_ptr
UATM::flightAuthorizationRequestDataReader::_duplicate (flightAuthorizationRequestDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightAuthorizationRequestDataReader::_tao_release (flightAuthorizationRequestDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightAuthorizationRequestDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightAuthorizationRequestDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightAuthorizationRequestDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/flightAuthorizationRequestDataReader:1.0";
}

::CORBA::Boolean
UATM::flightAuthorizationRequestDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightRequestInfoTypeSupport.

UATM::flightRequestInfoTypeSupport_ptr
TAO::Objref_Traits<UATM::flightRequestInfoTypeSupport>::duplicate (
    UATM::flightRequestInfoTypeSupport_ptr p)
{
  return UATM::flightRequestInfoTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightRequestInfoTypeSupport>::release (
    UATM::flightRequestInfoTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightRequestInfoTypeSupport_ptr
TAO::Objref_Traits<UATM::flightRequestInfoTypeSupport>::nil (void)
{
  return UATM::flightRequestInfoTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightRequestInfoTypeSupport>::marshal (
    const UATM::flightRequestInfoTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightRequestInfoTypeSupport::flightRequestInfoTypeSupport (void)
{}

UATM::flightRequestInfoTypeSupport::~flightRequestInfoTypeSupport (void)
{
}

UATM::flightRequestInfoTypeSupport_ptr
UATM::flightRequestInfoTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightRequestInfoTypeSupport::_duplicate (
      dynamic_cast<flightRequestInfoTypeSupport_ptr> (_tao_objref));
}

UATM::flightRequestInfoTypeSupport_ptr
UATM::flightRequestInfoTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightRequestInfoTypeSupport::_duplicate (
      dynamic_cast<flightRequestInfoTypeSupport_ptr> (_tao_objref));
}

UATM::flightRequestInfoTypeSupport_ptr
UATM::flightRequestInfoTypeSupport::_nil (void)
{
  return 0;
}

UATM::flightRequestInfoTypeSupport_ptr
UATM::flightRequestInfoTypeSupport::_duplicate (flightRequestInfoTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightRequestInfoTypeSupport::_tao_release (flightRequestInfoTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightRequestInfoTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightRequestInfoTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightRequestInfoTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UATM/flightRequestInfoTypeSupport:1.0";
}

::CORBA::Boolean
UATM::flightRequestInfoTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightRequestInfoDataWriter.

UATM::flightRequestInfoDataWriter_ptr
TAO::Objref_Traits<UATM::flightRequestInfoDataWriter>::duplicate (
    UATM::flightRequestInfoDataWriter_ptr p)
{
  return UATM::flightRequestInfoDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightRequestInfoDataWriter>::release (
    UATM::flightRequestInfoDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightRequestInfoDataWriter_ptr
TAO::Objref_Traits<UATM::flightRequestInfoDataWriter>::nil (void)
{
  return UATM::flightRequestInfoDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightRequestInfoDataWriter>::marshal (
    const UATM::flightRequestInfoDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightRequestInfoDataWriter::flightRequestInfoDataWriter (void)
{}

UATM::flightRequestInfoDataWriter::~flightRequestInfoDataWriter (void)
{
}

UATM::flightRequestInfoDataWriter_ptr
UATM::flightRequestInfoDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightRequestInfoDataWriter::_duplicate (
      dynamic_cast<flightRequestInfoDataWriter_ptr> (_tao_objref));
}

UATM::flightRequestInfoDataWriter_ptr
UATM::flightRequestInfoDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightRequestInfoDataWriter::_duplicate (
      dynamic_cast<flightRequestInfoDataWriter_ptr> (_tao_objref));
}

UATM::flightRequestInfoDataWriter_ptr
UATM::flightRequestInfoDataWriter::_nil (void)
{
  return 0;
}

UATM::flightRequestInfoDataWriter_ptr
UATM::flightRequestInfoDataWriter::_duplicate (flightRequestInfoDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightRequestInfoDataWriter::_tao_release (flightRequestInfoDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightRequestInfoDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightRequestInfoDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightRequestInfoDataWriter::_interface_repository_id (void) const
{
  return "IDL:UATM/flightRequestInfoDataWriter:1.0";
}

::CORBA::Boolean
UATM::flightRequestInfoDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\ongio_1lak36v\Downloads\OpenDDS-3.29.1\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations for UATM::flightRequestInfoDataReader.

UATM::flightRequestInfoDataReader_ptr
TAO::Objref_Traits<UATM::flightRequestInfoDataReader>::duplicate (
    UATM::flightRequestInfoDataReader_ptr p)
{
  return UATM::flightRequestInfoDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UATM::flightRequestInfoDataReader>::release (
    UATM::flightRequestInfoDataReader_ptr p)
{
  ::CORBA::release (p);
}

UATM::flightRequestInfoDataReader_ptr
TAO::Objref_Traits<UATM::flightRequestInfoDataReader>::nil (void)
{
  return UATM::flightRequestInfoDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UATM::flightRequestInfoDataReader>::marshal (
    const UATM::flightRequestInfoDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

TAO_END_VERSIONED_NAMESPACE_DECL



UATM::flightRequestInfoDataReader::flightRequestInfoDataReader (void)
{}

UATM::flightRequestInfoDataReader::~flightRequestInfoDataReader (void)
{
}

UATM::flightRequestInfoDataReader_ptr
UATM::flightRequestInfoDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightRequestInfoDataReader::_duplicate (
      dynamic_cast<flightRequestInfoDataReader_ptr> (_tao_objref));
}

UATM::flightRequestInfoDataReader_ptr
UATM::flightRequestInfoDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return flightRequestInfoDataReader::_duplicate (
      dynamic_cast<flightRequestInfoDataReader_ptr> (_tao_objref));
}

UATM::flightRequestInfoDataReader_ptr
UATM::flightRequestInfoDataReader::_nil (void)
{
  return 0;
}

UATM::flightRequestInfoDataReader_ptr
UATM::flightRequestInfoDataReader::_duplicate (flightRequestInfoDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UATM::flightRequestInfoDataReader::_tao_release (flightRequestInfoDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UATM::flightRequestInfoDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UATM/flightRequestInfoDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UATM::flightRequestInfoDataReader::_interface_repository_id (void) const
{
  return "IDL:UATM/flightRequestInfoDataReader:1.0";
}

::CORBA::Boolean
UATM::flightRequestInfoDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

